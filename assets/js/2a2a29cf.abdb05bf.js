"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[6311],{30474:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=t(74848),a=t(28453);const i={title:"Introducing chat",description:"Send and receive chat messages in a meeting.",sidebar_position:1,tags:["web-core","chat"]},c="Introducing chat",r={id:"chat/introduction",title:"Introducing chat",description:"Send and receive chat messages in a meeting.",source:"@site/docs/web-core/chat/introduction.mdx",sourceDirName:"chat",slug:"/chat/introduction",permalink:"/docs/web-core/chat/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/web-core/chat/introduction.mdx",tags:[{label:"web-core",permalink:"/docs/web-core/tags/web-core"},{label:"chat",permalink:"/docs/web-core/tags/chat"}],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:1,frontMatter:{title:"Introducing chat",description:"Send and receive chat messages in a meeting.",sidebar_position:1,tags:["web-core","chat"]},sidebar:"tutorialSidebar",previous:{title:"Permissions",permalink:"/docs/web-core/participants/permissions"},next:{title:"Sending a chat message",permalink:"/docs/web-core/chat/sending-a-chat-message"}},o={},d=[];function g(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"introducing-chat",children:"Introducing chat"}),"\n",(0,s.jsxs)(n.p,{children:["The meeting chat object is stored in ",(0,s.jsx)(n.code,{children:"meeting.chat"}),", which has methods for\nsending and receiving messages. There are 3 types of messages that can be sent\nin chat - text messages, images, and files."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"meeting.chat.messages"})," array contains all the messages that have been sent\nin the chat. This is an array of objects, where each object is of type\n",(0,s.jsx)(n.code,{children:"Message"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The type ",(0,s.jsx)(n.code,{children:"Message"})," is defined in the following manner."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface BaseMessage<T extends MessageType> {\n  type: T;\n  userId: string;\n  displayName: string;\n  time: Date;\n  id: string;\n  isEdited?: boolean;\n  read?: boolean;\n  pluginId?: string;\n  pinned?: boolean;\n  targetUserIds?: string[];\n}\n\ninterface TextMessage extends BaseMessage<MessageType.text> {\n  message: string;\n}\n\ninterface ImageMessage extends BaseMessage<MessageType.image> {\n  link: string;\n}\n\ninterface FileMessage extends BaseMessage<MessageType.file> {\n  name: string;\n  size: number;\n  link: string;\n}\n\ntype Message = TextMessage | ImageMessage | FileMessage;\n"})}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)("title",{children:"Web Core Introducing chat"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(96540);const a={},i=s.createContext(a);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);