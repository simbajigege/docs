"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[84149],{66803:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=n(74848),o=n(28453);const s={title:"Introducing chat",description:"Learn the basics of integrating Dyte's chat functionality into your Android application \u2013 a step towards immersive real-time communication.",sidebar_position:1,tags:["mobile-core","chat"]},a="Introducing chat",c={id:"chat/introduction",title:"Introducing chat",description:"Learn the basics of integrating Dyte's chat functionality into your Android application \u2013 a step towards immersive real-time communication.",source:"@site/docs/android-core/chat/introduction.mdx",sourceDirName:"chat",slug:"/chat/introduction",permalink:"/docs/android-core/chat/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/android-core/chat/introduction.mdx",tags:[{label:"mobile-core",permalink:"/docs/android-core/tags/mobile-core"},{label:"chat",permalink:"/docs/android-core/tags/chat"}],version:"current",lastUpdatedAt:1710083090,formattedLastUpdatedAt:"Mar 10, 2024",sidebarPosition:1,frontMatter:{title:"Introducing chat",description:"Learn the basics of integrating Dyte's chat functionality into your Android application \u2013 a step towards immersive real-time communication.",sidebar_position:1,tags:["mobile-core","chat"]},sidebar:"tutorialSidebar",previous:{title:"Room Connection Events",permalink:"/docs/android-core/room/room-connection-events"},next:{title:"Sending a chat message",permalink:"/docs/android-core/chat/sending-a-chat-message"}},r={},d=[];function h(e){const t={code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"introducing-chat",children:"Introducing chat"}),"\n",(0,i.jsxs)(t.p,{children:["The meeting chat object is stored in ",(0,i.jsx)(t.code,{children:"meeting.chat"}),", which has methods for sending and receiving messages. There are 3 types of messages that can be sent in chat - text messages, images, and files."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"meeting.chat.messages"})," array contains all the messages that have been sent\nin the chat. This is an array of objects, where each object is of type\n",(0,i.jsx)(t.code,{children:"DyteChatMessage"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"We support three types of chat messages, they are as follows"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Text Message"}),"\n",(0,i.jsx)(t.li,{children:"Image Message"}),"\n",(0,i.jsx)(t.li,{children:"File Message"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["All above objects are of type ",(0,i.jsx)(t.code,{children:"DyteChatMessage"})," along with their own class\nvariables."]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(96540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);