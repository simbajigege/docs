"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[8402],{97995:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=s(74848),i=s(28453);const o={sidebar_position:4,description:"Details about the Design System in Dyte's React Native UI Kit."},r="Design System",a={id:"design-system",title:"Design System",description:"Details about the Design System in Dyte's React Native UI Kit.",source:"@site/docs/rn-ui-kit/design-system.mdx",sourceDirName:".",slug:"/design-system",permalink:"/docs/react-native/design-system",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/rn-ui-kit/design-system.mdx",tags:[],version:"current",lastUpdatedAt:1709899206,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Details about the Design System in Dyte's React Native UI Kit."},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/docs/react-native/quickstart"},next:{title:"Use React Native Core Hooks",permalink:"/docs/react-native/using-hooks"}},d={},c=[{value:"Design Tokens",id:"design-tokens",level:2},{value:"Typography",id:"typography",level:3},{value:"Usage",id:"usage",level:4},{value:"Colors",id:"colors",level:3},{value:"Usage",id:"usage-1",level:4}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components},{ColorPalette:s,Head:o}=n;return s||g("ColorPalette",!0),o||g("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"design-system",children:"Design System"}),"\n",(0,t.jsx)(n.p,{children:"A design system is a collection of reusable components, guided by clear\nstandards, that can be assembled together to build any number of applications."}),"\n",(0,t.jsxs)(n.p,{children:["Dyte's UI Kit uses Atomic design as a principle to bring logic and structure to\nindividual screens. Read this\n",(0,t.jsx)(n.a,{href:"https://dyte.io/blog/new-dyte-video-sdk-design-system/",children:"blog post"})," to get a\ncomplete overview of how we're using design tokens and atomic design principles\nto create a multi-brand, multi-device Design System."]}),"\n",(0,t.jsx)(n.p,{children:"Let's look at how you can customize your UI with Dyte's UI Kit."}),"\n",(0,t.jsxs)(n.p,{children:["Dyte provides the ",(0,t.jsx)(n.code,{children:"provideDyteDesignSystem()"})," utility to programmatically\nconfigure the design system of UI Kit components with a few lines of code."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { useDyteMeeting } from '@dytesdk/react-native-core';\nimport { DyteMeeting, DyteUIProvider } from '@dytesdk/react-native-ui-kit';\n\nfunction Example() {\n  const { meeting } = useDyteMeeting();\n\n  useEffect(() => {\n    // provideDyteDesignSystem(designTokens)\n    provideDyteDesignSystem({\n      // sets light background colors\n      theme: 'light',\n      colors: {\n        danger: '#ffac00',\n        brand: {\n          300: '#00FFE1',\n          400: '#00FFFF',\n          500: '#00E1D4',\n          600: '#007B74',\n          700: '#00655F',\n        },\n        text: '#071428',\n        textOnBrand: '#ffffff',\n        videoBg: '#E5E7EB',\n      },\n    });\n  }, []);\n\n  return (\n    <DyteUIProvider>\n      <DyteMeeting meeting={meeting} />\n    </DyteUIProvider>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Read on to learn more about each token in detail."}),"\n",(0,t.jsx)(n.h2,{id:"design-tokens",children:"Design Tokens"}),"\n",(0,t.jsxs)(n.p,{children:["React Native UI Kit uses ",(0,t.jsx)(n.a,{href:"https://css-tricks.com/what-are-design-tokens/",children:"design tokens"})," for\nit's design system."]}),"\n",(0,t.jsx)(n.p,{children:"Design tokens are the design related values which are used to maintain a design\nsystem, which provides flexibility in customizing the overall design of a system\nwith values such as: typography, colors etc."}),"\n",(0,t.jsx)(n.h3,{id:"typography",children:"Typography"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"fontfamily: 'Inter';\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can tweak the font family used in your UI Kit components easily with this\ntoken."}),"\n",(0,t.jsx)(n.p,{children:"You can edit this value in two ways with the provideDyteDesignSystem utility."}),"\n",(0,t.jsx)(n.h4,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const designTokens = {\n  fontFamily: 'Custom Font';\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set this value in your design tokens."}),"\n",(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.code,{children:"fontFamily"})," \ud83e\udea1 - Use a custom font family, you'll have to load the font\nmanually."]}),"\n",(0,t.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"colors: {\n  'brand': {\n    300: '#497CFD',\n    400: '#356EFD',\n    500: '#2160FD',\n    600: '#0D51FD',\n    700: '#0246FD',\n  },\n/* ... rest of the shades */\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Here are all the color tokens, along with their default values."}),"\n",(0,t.jsx)(s,{name:"Brand",shades:{300:"#497CFD",400:"#356EFD",500:"#2160FD",600:"#0D51FD",700:"#0246FD"}}),"\n",(0,t.jsx)(s,{name:"Background",shades:{1e3:"#080808",900:"#1A1A1A",800:"#1E1E1E",700:"#2C2C2C",600:"#3C3C3C"},desc:!0}),"\n",(0,t.jsx)(s,{name:"Text",shades:{1e3:"rgb(255 255 255)",900:"rgb(255 255 255 / 0.88)",800:"rgb(255 255 255 / 0.76)",700:"rgb(255 255 255 / 0.64)",600:"rgb(255 255 255 / 0.52)"},desc:!0,rgb:!0}),"\n",(0,t.jsx)(s,{name:"Text On Brand",shades:{1e3:"rgb(255 255 255)",900:"rgb(255 255 255 / 0.88)",800:"rgb(255 255 255 / 0.76)",700:"rgb(255 255 255 / 0.64)",600:"rgb(255 255 255 / 0.52)"},desc:!0,rgb:!0}),"\n",(0,t.jsx)(s,{name:"Singular Colors",shades:{"video-bg":"#181818",success:"#83D017",warning:"#FFCD07",danger:"#FF2D2D"}}),"\n",(0,t.jsx)(n.h4,{id:"usage-1",children:"Usage"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["Note the exception of ",(0,t.jsx)(n.code,{children:"text"})," and ",(0,t.jsx)(n.code,{children:"textOnBrand"})," colors, you only specify a\nsingle color even though there are the following shades: 1000 - 600."]}),(0,t.jsxs)(n.p,{children:["This is because the ",(0,t.jsx)(n.code,{children:"provideDyteDesignSystem()"})," utility sets the color you pass\nto ",(0,t.jsx)(n.code,{children:"text-1000"})," and calculates lighter shades and sets them as well."]}),(0,t.jsxs)(n.p,{children:["Only pass objects for ",(0,t.jsx)(n.code,{children:"brand"})," and ",(0,t.jsx)(n.code,{children:"background"})," colors."]})]}),"\n",(0,t.jsxs)(n.p,{children:["A set of commonly used ",(0,t.jsx)(n.code,{children:"background"})," shades are available by default with the\n",(0,t.jsx)(n.code,{children:"theme"})," property."]}),"\n",(0,t.jsxs)(n.p,{children:["Theme values are: ",(0,t.jsx)(n.code,{children:"light"}),", ",(0,t.jsx)(n.code,{children:"dark"}),", ",(0,t.jsx)(n.code,{children:"darkest"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Edit color tokens like this. Only the colors you specify will be set."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const designTokens = {\n  theme: 'darkest',\n  colors: {\n    brand: { 500: '#0D51FD' },\n    background: { 1000: '#080808' },\n    text: '#ffffff',\n    textOnBrand: '#ffffff',\n    videoBg: '#181818',\n  },\n};\n"})}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("title",{children:"React Native UI Kit Design System"}),(0,t.jsx)("meta",{name:"description",content:"Explore Dyte's design system for React Native, providing guidelines and components for consistent and visually appealing UI design."})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}function g(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);