"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[59234],{82043:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=i(74848),a=i(28453);const o={sidebar_position:5,description:"Explore advanced usage scenarios and features in Dyte for Android with our detailed documentation."},s="Advanced usage",r={id:"advanced-usage",title:"Advanced usage",description:"Explore advanced usage scenarios and features in Dyte for Android with our detailed documentation.",source:"@site/docs/android/advanced-usage.mdx",sourceDirName:".",slug:"/advanced-usage",permalink:"/docs/android/advanced-usage",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/android/advanced-usage.mdx",tags:[],version:"current",lastUpdatedAt:1709899166,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Explore advanced usage scenarios and features in Dyte for Android with our detailed documentation."},sidebar:"tutorialSidebar",previous:{title:"Customize your Meeting UI",permalink:"/docs/android/customize-meeting-ui"},next:{title:"Gallery",permalink:"/docs/android/components"}},d={},c=[{value:"Audio/Video config options while joining meeting.",id:"audiovideo-config-options-while-joining-meeting",level:2},{value:"Control the meeting, and take meeting &amp; participant actions",id:"control-the-meeting-and-take-meeting--participant-actions",level:2},{value:"Get info about the meeting&#39;s UI configuration",id:"get-info-about-the-meetings-ui-configuration",level:2},{value:"Get info about the plugins configured for the meeting",id:"get-info-about-the-plugins-configured-for-the-meeting",level:2},{value:"Self controls inside meeting",id:"self-controls-inside-meeting",level:2},{value:"Mic control",id:"mic-control",level:3},{value:"Camera control",id:"camera-control",level:2},{value:"Leave meeting",id:"leave-meeting",level:3},{value:"Get list of all participants in the meeting",id:"get-list-of-all-participants-in-the-meeting",level:2},{value:"Controlling individual participants and actions",id:"controlling-individual-participants-and-actions",level:2},{value:"Disable participant&#39;s audio stream",id:"disable-participants-audio-stream",level:4},{value:"Check if participant&#39;s video is on",id:"check-if-participants-video-is-on",level:4},{value:"Get participant video stream",id:"get-participant-video-stream",level:4},{value:"Disable participant&#39;s audio stream",id:"disable-participants-audio-stream-1",level:4},{value:"Check if the participant is pinned to the grid",id:"check-if-the-participant-is-pinned-to-the-grid",level:4},{value:"Pin a participant video to the grid",id:"pin-a-participant-video-to-the-grid",level:4},{value:"Unpin a participant video from the grid",id:"unpin-a-participant-video-from-the-grid",level:4}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"advanced-usage",children:"Advanced usage"}),"\n",(0,t.jsx)(n.h2,{id:"audiovideo-config-options-while-joining-meeting",children:"Audio/Video config options while joining meeting."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",metastring:"{3,4,8,11}",children:"val meetingInfo = DyteMeetingInfoV2(\n  authToken = state.authToken,\n  enableAudio = true,\n  enableVideo = true\n)\nval config = DyteUIKitConfig(\n  activity = this,\n  dyteMeetingInfo = meetingInfo,\n)\nval dyteUIKit = DyteUIKitBuilder.build(config)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"control-the-meeting-and-take-meeting--participant-actions",children:"Control the meeting, and take meeting & participant actions"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Meeting"})," instance (referenced as ",(0,t.jsx)(n.code,{children:"meeting"})," below) helps you interact with\nthe meeting. You can get access to meeting object as follows."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val meeting = dyteUIKit.meeting\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,t.jsxs)(n.p,{children:["Once you have access to ",(0,t.jsx)(n.code,{children:"meeting"})," object you can listen to all events triggered in core-sdk.\nPlease read ",(0,t.jsx)(n.a,{href:"/android-core/",children:"core docs"})]})}),"\n",(0,t.jsxs)(n.p,{children:["You can get the UI configuration of the meeting in progress using the\n",(0,t.jsx)(n.code,{children:"designTokens"})," property of ",(0,t.jsx)(n.code,{children:"Meeting"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val designTokens = dyteUIKit.designTokens\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can take actions on the meeting as well as the participants. You can also\nsetup custom controls to that interact with the meeting in certain ways that\nhelp you send events and messages across to other participants in the meeting."}),"\n",(0,t.jsx)(n.h2,{id:"get-info-about-the-meetings-ui-configuration",children:"Get info about the meeting's UI configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val colors = designTokens.colors\nval textColors = designTokens.colors.text\nval brandColors = designTokens.colors.brand\nval backgroundColors = designTokens.colors.background\nval videoBackgroundColor = designTokens.colors.videoBackground\nval statusColors = designTokens.colors.status\n"})}),"\n",(0,t.jsx)(n.h2,{id:"get-info-about-the-plugins-configured-for-the-meeting",children:"Get info about the plugins configured for the meeting"}),"\n",(0,t.jsxs)(n.p,{children:["You can get info about the plugins configured for the meeting in progress using\nthe ",(0,t.jsx)(n.code,{children:"plugins"})," property of ",(0,t.jsx)(n.code,{children:"Meeting"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val activePlugins = meeting.plugins.active\nval allPlugins = meeting.plugins.all\n"})}),"\n",(0,t.jsx)(n.h2,{id:"self-controls-inside-meeting",children:"Self controls inside meeting"}),"\n",(0,t.jsx)(n.h3,{id:"mic-control",children:"Mic control"}),"\n",(0,t.jsx)(n.p,{children:"To turn off the mic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.localUser.disableAudio()\n"})}),"\n",(0,t.jsx)(n.p,{children:"To turn on the mic"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.localUser.enableAudio()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"camera-control",children:"Camera control"}),"\n",(0,t.jsx)(n.p,{children:"To turn off the camera"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.localUser.disableVideo()\n"})}),"\n",(0,t.jsx)(n.p,{children:"To turn on the camera"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.localUser.enableVideo()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"leave-meeting",children:"Leave meeting"}),"\n",(0,t.jsx)(n.p,{children:"To leave the meeting"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.leaveRoom()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"get-list-of-all-participants-in-the-meeting",children:"Get list of all participants in the meeting"}),"\n",(0,t.jsxs)(n.p,{children:["You can get a list of all participants in the meeting using the ",(0,t.jsx)(n.code,{children:"participants"}),"\nproperty of ",(0,t.jsx)(n.code,{children:"meeting"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val participants = meeting.participants\nval active = participants.active\nval joined = participants.joined\n"})}),"\n",(0,t.jsx)(n.p,{children:"For active speaker and pinned participant in the meeting use as follows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val screenshares = participants.screenshares\nval activeSpeker = participants.activeSpeaker\nval pinned = participants.pinned\n"})}),"\n",(0,t.jsx)(n.h2,{id:"controlling-individual-participants-and-actions",children:"Controlling individual participants and actions"}),"\n",(0,t.jsx)(n.p,{children:"Dyte client SDK provide methods and properties to help you control participant\nactions and certain UI elements. This could include actions that affect the\nparticipant themselves as well as other participants (like a host with\nprivileged permissions may want to control the video of other participants).\nThis section defines all the possible properties and actions that can be taken."}),"\n",(0,t.jsx)(n.p,{children:"To get hold of participant you want to manage, do as follows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'val participant = meeting.participants.joined.find { it.id = "my_participant_id" }\n'})}),"\n",(0,t.jsx)(n.h4,{id:"disable-participants-audio-stream",children:"Disable participant's audio stream"}),"\n",(0,t.jsx)(n.p,{children:"To remotely turn the participant's mic off, you can do"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"participant.disableAudio()\n"})}),"\n",(0,t.jsx)(n.h4,{id:"check-if-participants-video-is-on",children:"Check if participant's video is on"}),"\n",(0,t.jsx)(n.p,{children:"To check whether a participant's video is on (camera is turned on), you can use"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val video = participant.videoEnabled;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["which sets the value of ",(0,t.jsx)(n.code,{children:"video"})," to a boolean specifying if the camera is on or\nnot."]}),"\n",(0,t.jsx)(n.h4,{id:"get-participant-video-stream",children:"Get participant video stream"}),"\n",(0,t.jsx)(n.p,{children:"If the participant's video is on, you can get the associated video stream using"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val videoStream = participant.getVideoView()\n"})}),"\n",(0,t.jsx)(n.h4,{id:"disable-participants-audio-stream-1",children:"Disable participant's audio stream"}),"\n",(0,t.jsx)(n.p,{children:"To remotely turn the participant's camera off, you can do"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"participant.disableVideo()\n"})}),"\n",(0,t.jsx)(n.h4,{id:"check-if-the-participant-is-pinned-to-the-grid",children:"Check if the participant is pinned to the grid"}),"\n",(0,t.jsx)(n.p,{children:"To check whether a participant's video is pinned to the meeting grid; by the\nhost, by the user, by the preset, or by any other mechanism; you can use"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val pinned = participant.isPinned;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["which sets the value of ",(0,t.jsx)(n.code,{children:"pinned"})," to a boolean specifying whether the video is\npinned or not."]}),"\n",(0,t.jsx)(n.h4,{id:"pin-a-participant-video-to-the-grid",children:"Pin a participant video to the grid"}),"\n",(0,t.jsx)(n.p,{children:"You can pin a participant's video to the grid using"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"participant.pin();\n"})}),"\n",(0,t.jsx)(n.h4,{id:"unpin-a-participant-video-from-the-grid",children:"Unpin a participant video from the grid"}),"\n",(0,t.jsx)(n.p,{children:"You can unpin a participant's video from the grid using"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"participant.unpin();\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("title",{children:"Android Advanced usage"}),(0,t.jsx)("meta",{name:"description",content:"Explore advanced usage scenarios and features in Dyte for Android with our detailed documentation."})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(96540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);