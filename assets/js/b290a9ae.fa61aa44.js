"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[76596],{30950:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=n(74848),o=n(28453);const r={title:"\ud83c\udfac Media",sidebar_position:3},a=void 0,l={id:"migration/twilio/media",title:"\ud83c\udfac Media",description:"Publish-Subscribe Model",source:"@site/docs/guides/migration/twilio/media.mdx",sourceDirName:"migration/twilio",slug:"/migration/twilio/media",permalink:"/docs/guides/migration/twilio/media",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/migration/twilio/media.mdx",tags:[],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:3,frontMatter:{title:"\ud83c\udfac Media",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udd24 Basics",permalink:"/docs/guides/migration/twilio/basics"},next:{title:"\ud83c\udfd7\ufe0f Misc",permalink:"/docs/guides/migration/twilio/misc"}},s={},d=[{value:"Publish-Subscribe Model",id:"publish-subscribe-model",level:2},{value:"Video",id:"video",level:2},{value:"Turn the camera off",id:"turn-the-camera-off",level:3},{value:"Render a remote user video",id:"render-a-remote-user-video",level:3},{value:"Audio",id:"audio",level:2}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Head:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"publish-subscribe-model",children:"Publish-Subscribe Model"}),"\n",(0,t.jsx)(i.p,{children:"In Twilio all the media operations are done using a publish subscribe model. Eg to show your video to a remote peer you"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Acquire your camera track"}),"\n",(0,t.jsx)(i.li,{children:"Publish the track"}),"\n",(0,t.jsx)(i.li,{children:"Listen for new track published events on remote peer"}),"\n",(0,t.jsx)(i.li,{children:"Subscribe to the track on the remote peer if required"}),"\n",(0,t.jsx)(i.li,{children:"Render the track"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"While this level of manual control is available on Dyte, but the default behaviour is much simpler"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:"meeting.self.enableVideo();\n"})}),"\n",(0,t.jsx)(i.p,{children:"It will internally acquire, publish, make the remote peer subscribe to the track"}),"\n",(0,t.jsx)(i.h2,{id:"video",children:"Video"}),"\n",(0,t.jsxs)(i.p,{children:["While Twilio requires\xa0",(0,t.jsx)(i.a,{href:"https://www.twilio.com/docs/video/tutorials/developing-high-quality-video-applications",children:"additional configuration to set the quality of the video"}),", Dyte handles the video quality automatically based on network conditions and device capabilities. In low bandwidth environments Dyte prioritizes audio and FPS over video resolution."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Twilio"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-html",children:'\n<div class="twilio-self-view" width="1920" height="1080"></div>\n<style>\n#twilio-self-view video {\n    width: 100%;\n    height: auto;\n    aspect-ratio: 16/9;\n}\n</div>\n'})}),"\n",(0,t.jsx)(i.p,{children:"On the JS side"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"let localVideoTrack = await twilioVideo.createLocalVideoTrack({\n  height: { ideal: 720, min: 480, max: 1080 },\n  width: { ideal: 1280, min: 640, max: 1920 },\n  aspectRatio: 16 / 9,\n});\n\ntwilioRoom.localParticipant.publishTrack(localVideoTrack);\n\nconst localMediaContainer = document.getElementById('twilio-self-view');\n\nlocalMediaContainer!.appendChild(localVideoTrack.attach());\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Dyte"})}),"\n",(0,t.jsx)(i.p,{children:"To acquire and publish"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"meeting.self.enableVideo();\n"})}),"\n",(0,t.jsx)(i.p,{children:"To render the video, use our web component library"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"<dyte-participant-tile participant={meeting.self} />\n"})}),"\n",(0,t.jsx)(i.h3,{id:"turn-the-camera-off",children:"Turn the camera off"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Twilio"})}),"\n",(0,t.jsx)(i.p,{children:"Twilio Video is track based, so you must loop through each video track to unpublish the video, stop the video camera, and remove the video element from the DOM"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"twilioRoom.localParticipant.videoTracks.forEach((publication) => {\n  publication.unpublish();\n  publication.track.stop();\n  var selfTwilioVideo = document.getElementById('twilio-self-view-div');\n  selfTwilioVideo?.querySelector('video')?.remove();\n});\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Dyte"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"meeting.self.disableVideo();\n"})}),"\n",(0,t.jsx)(i.h3,{id:"render-a-remote-user-video",children:"Render a remote user video"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Twilio"})}),"\n",(0,t.jsxs)(i.p,{children:["Twilio emits \xa0",(0,t.jsx)(i.code,{children:"participantConnected"}),"\xa0and\xa0",(0,t.jsx)(i.code,{children:"trackSubscribed"}),"\xa0events, Dyte emits a similar",(0,t.jsx)(i.code,{children:"videoUpdate"})," (but you don't need to listen for this event)"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"twilioRoom.on('participantConnected', (participant) => {\n  participant.on('trackSubscribed', (track) => {\n    // a user turned on their video, render it\n    document.getElementById('twilio-user-view-div').appendChild(track.attach());\n  });\n\n  participant.on('trackUnsubscribed', (track) => {\n    // a user turned off their video, stop rendering it\n    var selfTwilioVideo = document.getElementById('twilio-user-view-div');\n    selfTwilioVideo.querySelector('video').remove();\n  });\n});\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Dyte"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"meeting.participants.active.on('videoUpdate', (participant) => {\n  // Some update in participant video\n  // participant.videoEnabled: boolean\n});\n"})}),"\n",(0,t.jsxs)(i.p,{children:["But you don't need this event to render remote participants, the ",(0,t.jsx)(i.code,{children:"dyte-participant-tile"})," component sets up this listener on its own and will render the video on its own"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"<dyte-participant-tile participant={remoteParticipant} />\n"})}),"\n",(0,t.jsx)(i.p,{children:"It is even easier in React, here is how to render every participant"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"const participants = useDyteSelector((m) => m.participants.active);\n\nreturn (<div>\n      {\n          participants\n             .map((p) => (<DyteParticipantTile participant={p} />)\n      }\n   </div>);\n"})}),"\n",(0,t.jsx)(i.h2,{id:"audio",children:"Audio"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Enabling audio"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Twilio"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"let localAudioTrack = await twilioVideo.createLocalAudioTrack();\n\ntwilioRoom.localParticipant.publishTrack(localAudioTrack);\nconst audioElement = localAudioTrack.attach();\ndocument.body.appendChild(audioElement);\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Dyte"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"meeting.self.enableAudio();\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Disabling audio"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Twilio"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"twilioRoom.localParticipant.audioTracks.forEach((publication) => {\n  publication.track.disable();\n});\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Dyte"})}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-tsx",children:"meeting.self.disableAudio();\n"})}),"\n",(0,t.jsx)(n,{children:(0,t.jsx)("title",{children:"\ud83c\udfac Media Guide"})})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var t=n(96540);const o={},r=t.createContext(o);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);