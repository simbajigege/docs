"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[13748],{18217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var o=t(74848),i=t(28453);const s={title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with Dyte's Polls Introduction guide.",sidebar_position:1,tags:["mobile-core","polls"]},l="Introduction",r={id:"polls/introduction",title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with Dyte's Polls Introduction guide.",source:"@site/docs/android-core/polls/introduction.mdx",sourceDirName:"polls",slug:"/polls/introduction",permalink:"/docs/android-core/polls/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/android-core/polls/introduction.mdx",tags:[{label:"mobile-core",permalink:"/docs/android-core/tags/mobile-core"},{label:"polls",permalink:"/docs/android-core/tags/polls"}],version:"current",lastUpdatedAt:1710757288,formattedLastUpdatedAt:"Mar 18, 2024",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with Dyte's Polls Introduction guide.",sidebar_position:1,tags:["mobile-core","polls"]},sidebar:"tutorialSidebar",previous:{title:"Livestream Event Listeners",permalink:"/docs/android-core/livestream/dyte-livestream-listener"},next:{title:"Creating a poll",permalink:"/docs/android-core/polls/creating-a-poll"}},d={},a=[{value:"Listening to new polls in a meeting",id:"listening-to-new-polls-in-a-meeting",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(n.p,{children:["The meetings polls object can be accessed using ",(0,o.jsx)(n.code,{children:"meeting.polls"}),". It provides\nmethods to create polls, vote, and more."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where\neach element is an object of type ",(0,o.jsx)(n.code,{children:"DytePollMessage"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The type ",(0,o.jsx)(n.code,{children:"DytePollMessage"})," is the main class for any poll in Dyte. It also\ncontains list of ",(0,o.jsx)(n.code,{children:"DytePollOption"})," which are options for a given poll. And every\n",(0,o.jsx)(n.code,{children:"DytePollOption"})," has list of votes inside of it. Votes are objects of class\n",(0,o.jsx)(n.code,{children:"DytePollVote"})," which internally has id and name of the vote."]}),"\n",(0,o.jsxs)(n.p,{children:["One can easily create, vote and view polls by listening to callbacks on\n",(0,o.jsx)(n.code,{children:"meeting"})," object."]}),"\n",(0,o.jsx)(n.h2,{id:"listening-to-new-polls-in-a-meeting",children:"Listening to new polls in a meeting"}),"\n",(0,o.jsxs)(n.p,{children:["To be able to receive new poll messages you need to implement a method\n",(0,o.jsx)(n.code,{children:"onPollUpdates()"})," method from callback ",(0,o.jsx)(n.code,{children:"DyteMeetingRoomEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,o.jsx)(n.code,{children:"meeting.addMeetingEventsListener(dyteMeetingRoomEventsListener)"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:"    meeting.addMeetingRoomEventsListener(object :\n      DyteMeetingRoomEventsListener {\n      override fun onNewPoll(poll: DytePollMessage) {\n        // code to handle new poll\n      }\n\n      override fun onPollUpdates(pollMessages: List<DytePollMessage>) {\n        // code to handle polls and their vote updates.\n      }\n    })\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(96540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);