"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[29722],{18569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=n(74848),s=n(28453);const a={title:"Manage Stage in Dyte's Webinar",description:"Learn how to effectively manage webinar stages in iOS Core with Dyte Docs. Elevate the quality of your app's webinar experiences.",sidebar_position:3,tags:["mobile-core","webinar"]},r="Manage Stage in Dyte's Webinar",o={id:"webinar/stage-management",title:"Manage Stage in Dyte's Webinar",description:"Learn how to effectively manage webinar stages in iOS Core with Dyte Docs. Elevate the quality of your app's webinar experiences.",source:"@site/docs/ios-core/webinar/stage-management.mdx",sourceDirName:"webinar",slug:"/webinar/stage-management",permalink:"/docs/ios-core/webinar/stage-management",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/ios-core/webinar/stage-management.mdx",tags:[{label:"mobile-core",permalink:"/docs/ios-core/tags/mobile-core"},{label:"webinar",permalink:"/docs/ios-core/tags/webinar"}],version:"current",lastUpdatedAt:1709899206,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:3,frontMatter:{title:"Manage Stage in Dyte's Webinar",description:"Learn how to effectively manage webinar stages in iOS Core with Dyte Docs. Elevate the quality of your app's webinar experiences.",sidebar_position:3,tags:["mobile-core","webinar"]},sidebar:"tutorialSidebar",previous:{title:"Join and Leave Stage using Dyte's Webinar Platform",permalink:"/docs/ios-core/webinar/introduction"},next:{title:"Recording",permalink:"/docs/ios-core/recording"}},c={},l=[{value:"Host stage management",id:"host-stage-management",level:2},{value:"Participant stage management",id:"participant-stage-management",level:2},{value:"Access the list of requests",id:"access-the-list-of-requests",level:3},{value:"Listen to the incoming requests",id:"listen-to-the-incoming-requests",level:3},{value:"Accept stage requests",id:"accept-stage-requests",level:3},{value:"Reject a request",id:"reject-a-request",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"manage-stage-in-dytes-webinar",children:"Manage Stage in Dyte's Webinar"}),"\n",(0,i.jsx)(t.p,{children:"In the webinar, both hosts and participants have the ability to manage the stage. This allows for seamless control and organization of the webinar session."}),"\n",(0,i.jsx)(t.h2,{id:"host-stage-management",children:"Host stage management"}),"\n",(0,i.jsxs)(t.p,{children:["In Dyte's webinar platform, hosts have the capability to request participants to join the stage. When a host sends a request to a participant, the participant will receive a callback in the ",(0,i.jsx)(t.code,{children:"DyteWebinarEventsListener#onPresentRequestReceived()"})," method. The participant can then choose to accept or decline the request using specific functions."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"extension MeetingViewModel: DyteWebinarEventsListener {\n  ...\n  func onPresentRequestReceived() {\n    // when host requests this user to join stage. Here one should give choice to either accept the request or decline it.\n  }\n  ...\n}\nmeeting.addWebinarEventsListener(webinarEventsListener: meetingModel)\n"})}),"\n",(0,i.jsx)(t.p,{children:"To accept the request and join the stage, participants can utilize the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"meeting.webinar.acceptRequestToPresent()\n"})}),"\n",(0,i.jsx)(t.p,{children:"Alternatively, if participants wish to decline the request and not join the stage, use the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"meeting.webinar.rejectRequestToPresent()\n"})}),"\n",(0,i.jsx)(t.h2,{id:"participant-stage-management",children:"Participant stage management"}),"\n",(0,i.jsx)(t.p,{children:'Participants with the "Accept requests" setting enabled in the Preset can manage the stage in the webinar.'}),"\n",(0,i.jsx)(t.h3,{id:"access-the-list-of-requests",children:"Access the list of requests"}),"\n",(0,i.jsxs)(t.p,{children:["To access the list of requests received to join the stage, you can utilize the ",(0,i.jsx)(t.code,{children:"meeting.webinar.requestedParticipants"})," API. This provides you with the necessary information about the participants who have requested to join the stage."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"meeting.webinar.requestedParticipants\n"})}),"\n",(0,i.jsx)(t.h3,{id:"listen-to-the-incoming-requests",children:"Listen to the incoming requests"}),"\n",(0,i.jsx)(t.p,{children:"Once you are in the meeting, you can register a listener in the meeting object to listen for incoming requests."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"extension MeetingViewModel: DyteWebinarEventsListener {\n  func onAddedToStage() {\n    // when this user is joined to stage\n  }\n  func onPresentRequestClosed(participant: RequestToPresentParticipant) {\n    // when a user who was trying to join stage leaves the call.\n  }\n  func onPresentRequestReceived() {\n    // when host requests this user to join stage. Here one should give choice to either accept the request or decline it.\n  }\n  func onPresentRequestAccepted(participant: RequestToPresentParticipant) {\n    // when a join stage request is accepted by host\n  }\n  func onPresentRequestAdded(participant: RequestToPresentParticipant) {\n    // when a user is requesting to join the stage\n  }\n  func onPresentRequestRejected(participant: RequestToPresentParticipant) {\n    // when a join stage request is denied by host\n  }\n  func onPresentRequestWithdrawn(participant: RequestToPresentParticipant) {\n    // when a user who was trying to join stage withdraws their request to join.\n  }\n  func onRemovedFromStage() {\n    // when this user is no longer on stage\n  }\n}\nmeeting.addWebinarEventsListener(webinarEventsListener: meetingModel)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"accept-stage-requests",children:"Accept stage requests"}),"\n",(0,i.jsxs)(t.p,{children:["To accept a request to join the stage, call the following function, where ",(0,i.jsx)(t.code,{children:"id"})," represents the unique identifier of the request."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"meeting.webinar.acceptRequest(id)\nmeeting.webinar.acceptAllRequest()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"reject-a-request",children:"Reject a request"}),"\n",(0,i.jsx)(t.p,{children:"To reject a request, call the following function:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"meeting.webinar.rejectRequest(id)\nmeeting.webinar.rejectAllRequest()\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["It's important to note that if a participant doesn't have the permission to perform these operations, the SDK will throw an ",(0,i.jsx)(t.code,{children:"UnsupportedOperationException"})]})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("title",{children:"iOS Core Manage Stage in Dyte's Webinar"}),(0,i.jsx)("meta",{name:"description",content:"Learn how to effectively manage webinar stages in iOS Core with Dyte Docs. Elevate the quality of your app's webinar experiences."})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);