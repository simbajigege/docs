"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[55655],{84926:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var i=r(74848),t=r(28453);const o={title:"Recording",description:"Delve into the recording capabilities of iOS Core with Dyte Docs. Learn how to seamlessly integrate and enhance your app's recording functionalities.",sidebar_position:9,tags:["mobile-core","recording"]},c="Recording",s={id:"recording",title:"Recording",description:"Delve into the recording capabilities of iOS Core with Dyte Docs. Learn how to seamlessly integrate and enhance your app's recording functionalities.",source:"@site/docs/ios-core/recording.mdx",sourceDirName:".",slug:"/recording",permalink:"/docs/ios-core/recording",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/ios-core/recording.mdx",tags:[{label:"mobile-core",permalink:"/docs/ios-core/tags/mobile-core"},{label:"recording",permalink:"/docs/ios-core/tags/recording"}],version:"current",lastUpdatedAt:1709899206,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:9,frontMatter:{title:"Recording",description:"Delve into the recording capabilities of iOS Core with Dyte Docs. Learn how to seamlessly integrate and enhance your app's recording functionalities.",sidebar_position:9,tags:["mobile-core","recording"]},sidebar:"tutorialSidebar",previous:{title:"Manage Stage in Dyte's Webinar",permalink:"/docs/ios-core/webinar/stage-management"},next:{title:"Waitlist Events",permalink:"/docs/ios-core/waitlist-events"}},d={},a=[{value:"Start a recording",id:"start-a-recording",level:2},{value:"Stop a recording",id:"stop-a-recording",level:2},{value:"Pause a recording",id:"pause-a-recording",level:2},{value:"Resume a paused recording",id:"resume-a-paused-recording",level:2},{value:"Get active recording state",id:"get-active-recording-state",level:2},{value:"Listening to recording events in a meeting",id:"listening-to-recording-events-in-a-meeting",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Head:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"recording",children:"Recording"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"meeting.recording"})," object can be used start and stop recordings in a\nmeeting. You can also get the current status of a recording using this API."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"meeting.recording"})," object has the following properties:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"recordingState"}),": Indicates the current recording state of the meeting."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"start-a-recording",children:"Start a recording"}),"\n",(0,i.jsxs)(n.p,{children:["To start a recording, you can call the ",(0,i.jsx)(n.code,{children:"start"})," method in the ",(0,i.jsx)(n.code,{children:"meeting.recording"}),"\nobject. The valid states are ",(0,i.jsx)(n.code,{children:"IDLE"}),", ",(0,i.jsx)(n.code,{children:"STARTING"}),", ",(0,i.jsx)(n.code,{children:"RECORDING"}),", and ",(0,i.jsx)(n.code,{children:"STOPPING"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"meeting.recording.start()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"stop-a-recording",children:"Stop a recording"}),"\n",(0,i.jsxs)(n.p,{children:["Call ",(0,i.jsx)(n.code,{children:"meeting.recording.stop()"})," to stop the active recording."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"meeting.recording.stop()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pause-a-recording",children:"Pause a recording"}),"\n",(0,i.jsxs)(n.p,{children:["Call ",(0,i.jsx)(n.code,{children:"meeting.recording.pause()"})," to pause the active recording."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"meeting.recording.pause();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"resume-a-paused-recording",children:"Resume a paused recording"}),"\n",(0,i.jsxs)(n.p,{children:["Call ",(0,i.jsx)(n.code,{children:"meeting.recording.resume()"})," to resume the paused recording."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"meeting.recording.resume();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-active-recording-state",children:"Get active recording state"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"meeting.recording.recordingState"})," property describes the current state of\nthe recording. The valid states are ",(0,i.jsx)(n.code,{children:"IDLE"}),", ",(0,i.jsx)(n.code,{children:"STARTING"}),", ",(0,i.jsx)(n.code,{children:"RECORDING"}),", and\n",(0,i.jsx)(n.code,{children:"STOPPING"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"listening-to-recording-events-in-a-meeting",children:"Listening to recording events in a meeting"}),"\n",(0,i.jsxs)(n.p,{children:["To receive recording events, you must implement methods from ",(0,i.jsx)(n.code,{children:"DyteRecordingEventsListener"}),".\nYou can subscribe to these events by using the ",(0,i.jsx)(n.code,{children:"meeting.addRecordingEventsListener(dyteRecordingEventsListener: listener)"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-swift",children:"extension MeetingViewModel: DyteRecordingEventsListener {\n\n  func onMeetingRecordingEnded() {\n    // your code to handle recording end\n  }\n\n  func onMeetingRecordingStarted() {\n    // your code to handle recording start\n  }\n\n  func onMeetingRecordingStateUpdated(state: DyteRecordingState) {\n    // your code to handle recording state update\n  }\n\n  func onMeetingRecordingStopError(e: KotlinException) {\n    // your code to handle recording stop error\n  }\n}\n"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("title",{children:"iOS Core Recording"}),(0,i.jsx)("meta",{name:"description",content:"Delve into the recording capabilities of iOS Core with Dyte Docs. Learn how to seamlessly integrate and enhance your app's recording functionalities."})]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var i=r(96540);const t={},o=i.createContext(t);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);