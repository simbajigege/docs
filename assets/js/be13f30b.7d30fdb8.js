"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[80659],{5666:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var t=r(74848),o=r(28453);const i={title:"Recording",description:"Explore recording features in Flutter with Dyte's documentation. Learn how to enable and configure recording for a seamless user experience.",sidebar_position:9,tags:["flutter-core","recording"]},d="Recording",c={id:"recording",title:"Recording",description:"Explore recording features in Flutter with Dyte's documentation. Learn how to enable and configure recording for a seamless user experience.",source:"@site/docs/flutter-core/recording.mdx",sourceDirName:".",slug:"/recording",permalink:"/docs/flutter-core/recording",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/recording.mdx",tags:[{label:"flutter-core",permalink:"/docs/flutter-core/tags/flutter-core"},{label:"recording",permalink:"/docs/flutter-core/tags/recording"}],version:"current",lastUpdatedAt:1709899166,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:9,frontMatter:{title:"Recording",description:"Explore recording features in Flutter with Dyte's documentation. Learn how to enable and configure recording for a seamless user experience.",sidebar_position:9,tags:["flutter-core","recording"]},sidebar:"tutorialSidebar",previous:{title:"Voting on a poll",permalink:"/docs/flutter-core/polls/voting-on-a-poll"},next:{title:"Stage management",permalink:"/docs/flutter-core/stage-management"}},s={},a=[{value:"Start a recording",id:"start-a-recording",level:2},{value:"Stop a recording",id:"stop-a-recording",level:2},{value:"Listen to recording state changes",id:"listen-to-recording-state-changes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Head:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"recording",children:"Recording"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dyteClient.recording"})," object can be used start and stop recordings in a\nmeeting."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"dyteClient.recording"})," object has the following properties:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["recordingState: ",(0,t.jsx)(n.code,{children:"DyteRecordingState"}),", Indicates the current recording\nstate of the meeting."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To listen recording status updates, you need to listen for\n",(0,t.jsx)(n.code,{children:"onMeetingRecordingStateUpdated()"})," event. This returns ",(0,t.jsx)(n.code,{children:"DyteRecordingState"}),"\nobject with it."]}),"\n",(0,t.jsx)(n.p,{children:"There can be 4 states:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"idle"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"starting"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"recording"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"stopping"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"start-a-recording",children:"Start a recording"}),"\n",(0,t.jsxs)(n.p,{children:["To start a recording, you need to call the ",(0,t.jsx)(n.code,{children:"start()"})," method in the\n",(0,t.jsx)(n.code,{children:"dyteClient.recording"})," object, as shown below."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"dyteClient.recording.start();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"stop-a-recording",children:"Stop a recording"}),"\n",(0,t.jsxs)(n.p,{children:["To stop a recording, you need to call the ",(0,t.jsx)(n.code,{children:"stop()"})," method in the\n",(0,t.jsx)(n.code,{children:"dyteClient.recording"})," object, as shown below."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"dyteClient.recording.stop();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"listen-to-recording-state-changes",children:"Listen to recording state changes"}),"\n",(0,t.jsxs)(n.p,{children:["The changes to recording state can be listened by implementing\n",(0,t.jsx)(n.code,{children:"onMeetingRecordingStateUpdated"})," from ",(0,t.jsx)(n.code,{children:"DyteMeetingRoomEventsListener"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"\nclass RecordingListener with DyteRecordingEventsListener {\n\n  @override\n  void onMeetingRecordingStarted() {\n    /// Handle starting of recording\n  }\n\n  @override\n  void onMeetingRecordingStateUpdated(DyteRecordingState recordingState) {\n    /// Handle status update of recording\n  }\n\n   @override\n  void onMeetingRecordingEnded() {\n    /// Handle recording ended\n  }\n\n  @override\n  void onMeetingRecordingStopError(String error) {\n    /// Handle recording error\n  }\n\n}\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can subscribe to this events by ",(0,t.jsx)(n.code,{children:"addRecordingListener"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"dyteClient.addRecordingListener(RecordingListener());\n"})}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("title",{children:"Flutter Core Recording"}),(0,t.jsx)("meta",{name:"description",content:"Explore recording features in Flutter with Dyte's documentation. Learn how to enable and configure recording for a seamless user experience."})]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var t=r(96540);const o={},i=t.createContext(o);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);