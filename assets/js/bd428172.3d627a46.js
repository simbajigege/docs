"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[80197],{28509:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var t=i(74848),a=i(28453);const r={title:"Participant Events",description:"Event handling for participants.",sidebar_position:3,tags:["rn-core","participants","self"]},s=void 0,c={id:"participants/events",title:"Participant Events",description:"Event handling for participants.",source:"@site/docs/rn-core/participants/events.mdx",sourceDirName:"participants",slug:"/participants/events",permalink:"/docs/rn-core/participants/events",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/rn-core/participants/events.mdx",tags:[{label:"rn-core",permalink:"/docs/rn-core/tags/rn-core"},{label:"participants",permalink:"/docs/rn-core/tags/participants"},{label:"self",permalink:"/docs/rn-core/tags/self"}],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:3,frontMatter:{title:"Participant Events",description:"Event handling for participants.",sidebar_position:3,tags:["rn-core","participants","self"]},sidebar:"tutorialSidebar",previous:{title:"The participant object",permalink:"/docs/rn-core/participants/participant-object"},next:{title:"Introducing chat",permalink:"/docs/rn-core/chat/introduction"}},d={},p=[{value:"Events",id:"events",level:2},{value:"View mode change",id:"view-mode-change",level:3},{value:"Page change",id:"page-change",level:3},{value:"Active speaker",id:"active-speaker",level:3},{value:"Events on all participants",id:"events-on-all-participants",level:2},{value:"Participant joined",id:"participant-joined",level:3},{value:"Participant left",id:"participant-left",level:3},{value:"Participant pinned",id:"participant-pinned",level:3},{value:"Participant unpinned",id:"participant-unpinned",level:3},{value:"Video update",id:"video-update",level:3},{value:"Audio update",id:"audio-update",level:3},{value:"Screen share update",id:"screen-share-update",level:3},{value:"Network quality score",id:"network-quality-score",level:2},{value:"Events for specific participant",id:"events-for-specific-participant",level:2},{value:"Webinar events",id:"webinar-events",level:3}];function o(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,t.jsxs)(n.p,{children:["You can subscribe to events for all participants using\n",(0,t.jsx)(n.code,{children:"meeting.participants.on()"})," method. Here are the supported events:"]}),"\n",(0,t.jsx)(n.h3,{id:"view-mode-change",children:"View mode change"}),"\n",(0,t.jsx)(n.p,{children:"Triggered when the View mode changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.on(\n  'viewModeChanged',\n  ({ viewMode, currentPage, pageCount }) => {\n    console.log('view mode changed', viewMode);\n  }\n);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"page-change",children:"Page change"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.on(\n  'pageChanged',\n  ({ viewMode, currentPage, pageCount }) => {\n    console.log('page changed', currentPage);\n  }\n);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"active-speaker",children:"Active speaker"}),"\n",(0,t.jsxs)(n.p,{children:["This event is triggered when a participant becomes ",(0,t.jsx)(n.code,{children:"active"})," when they starts to\nspeak."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.on('activeSpeaker', (participant) => {\n  console.log(`${participant.id} is currently speaking`);\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"events-on-all-participants",children:"Events on all participants"}),"\n",(0,t.jsxs)(n.p,{children:["Instead of subscribing to individual participant events, you can subscribe to a\nparticipant map, such as ",(0,t.jsx)(n.code,{children:"joined"})," & ",(0,t.jsx)(n.code,{children:"active"})," and get updated when any of the\nparticipant emits an event."]}),"\n",(0,t.jsxs)(n.p,{children:["If you want to subscribe to participants when they become ",(0,t.jsx)(n.code,{children:"active"}),", you can do\nso by subscribing to ",(0,t.jsx)(n.code,{children:"meetings.participants.active.on('participantJoined')"})]}),"\n",(0,t.jsx)(n.h3,{id:"participant-joined",children:"Participant joined"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when any participant joins the meeting."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('participantJoined', (participant) => {\n  console.log(`A participant with id \"${participant.id}\" has joined`);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"participant-left",children:"Participant left"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when any participant leaves the meeting."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('participantLeft', (participant) => {\n  console.log(`A participant with id \"${participant.id}\" has left the meeting`);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"participant-pinned",children:"Participant pinned"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when a participant is pinned."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('pinned', (participant) => {\n  console.log(`Participant with id \"${participant.id}\" was pinned`);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"participant-unpinned",children:"Participant unpinned"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when a participant is unpinned."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('unpinned', (participant) => {\n  console.log(`Participant with id \"${participant.id}\" was unpinned`);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"video-update",children:"Video update"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when any participant starts / stops video."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('videoUpdate', (participant) => {\n  console.log(\n    `A participant with id \"${participant.id}\" updated their video track in the meeting`\n  );\n  // Use the video track if it exists\n  if (participant.videoEnabled) {\n    // participant.videoTrack\n  } else {\n    // handle stop video\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"audio-update",children:"Audio update"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when any participant starts / stops audio."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('audioUpdate', (participant) => {\n  console.log(\n    `A participant with id \"${participant.id}\" updated their audio track in the meeting`\n  );\n  // Use the audio track if it exists\n  if (participant.audioEnabled) {\n    // participant.audioTrack\n  } else {\n    // handle stop audio\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"screen-share-update",children:"Screen share update"}),"\n",(0,t.jsx)(n.p,{children:"Trigger an event when any participant starts / stops screen share."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on('screenShareUpdate', (participant) => {\n  console.log(\n    `A participant with id \"${participant.id}\" updated their screen share in the meeting`\n  );\n  // Use the screen share track if it exists\n  if (participant.screenShareEnabled) {\n    // participant.screenShareTrack\n  } else {\n    // handle stop screen share\n  }\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"network-quality-score",children:"Network quality score"}),"\n",(0,t.jsxs)(n.p,{children:["Subscribe to the ",(0,t.jsx)(n.code,{children:"mediaScoreUpdate"})," event to monitor network"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"meeting.participants.joined.on(\n  'mediaScoreUpdate',\n  ({ participantId, kind, isScreenshare, score }) => {\n    if (kind === 'video') {\n      console.log(\n        `Participant ${participantId}'s ${\n          isScreenshare ? 'screenshare' : 'video'\n        } quality score is `,\n        score\n      );\n    }\n\n    if (kind === 'audio') {\n      console.log(\n        `Participant ${participantId}'s audio quality score is `,\n        score\n      );\n    }\n\n    if (score < 5) {\n      console.log(`Participant ${participantId}'s media quality is poor`);\n    }\n  }\n);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"events-for-specific-participant",children:"Events for specific participant"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to subscribe to above events but for a specific participant only,\nyou can do so by binding event to ",(0,t.jsx)(n.code,{children:"meeting.participants.joined.get(peerId).on()"}),"\nmethod. where the ",(0,t.jsx)(n.code,{children:"peerId"})," is the id of the participant that you want to watch."]}),"\n",(0,t.jsx)(n.h3,{id:"webinar-events",children:"Webinar events"}),"\n",(0,t.jsxs)(n.p,{children:["Here is a list of events that can are emitted for a participants in a ",(0,t.jsx)(n.code,{children:"WEBINAR"}),"\nsetup."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Event"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peerRequestToJoinStage"})}),(0,t.jsx)(n.td,{children:"Emitted when a user has requested to join the webinar meeting."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peerRejectedToJoinStage"})}),(0,t.jsx)(n.td,{children:"Emitted when the user's request to join the meeting has been rejected."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peerAcceptedToJoinStage"})}),(0,t.jsx)(n.td,{children:"Emitted when the user's request to join the meeting has been accepted"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peerStoppedPresenting"})}),(0,t.jsx)(n.td,{children:"Emitted when a participant stops presenting in the webinar meeting."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"peerStartedPresenting"})}),(0,t.jsx)(n.td,{children:"Emitted when a participant starts presenting in the webinar meeting."})]})]})]}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)("title",{children:"React Native Core Participant Events"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(96540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);