"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[34526],{34174:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(74848),s=i(28453);const o={title:"Concepts",sidebar_position:3},r=void 0,a={id:"live-video/concepts",title:"Concepts",description:"Basic Concepts",source:"@site/docs/guides/live-video/concepts.mdx",sourceDirName:"live-video",slug:"/live-video/concepts",permalink:"/docs/guides/live-video/concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/live-video/concepts.mdx",tags:[],version:"current",lastUpdatedAt:1711734345,formattedLastUpdatedAt:"Mar 29, 2024",sidebarPosition:3,frontMatter:{title:"Concepts",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Get your keys",permalink:"/docs/guides/live-video/get-started"},next:{title:"Server Integration",permalink:"/docs/guides/live-video/build-live-video-app"}},d={},l=[{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"Components",id:"components",level:2},{value:"Developer Portal",id:"developer-portal",level:3},{value:"REST API",id:"rest-api",level:3},{value:"Core SDK",id:"core-sdk",level:3},{value:"UI Kit",id:"ui-kit",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:i,Head:o}=t;return i||p("Details",!0),o||p("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"basic-concepts",children:"Basic Concepts"}),"\n",(0,n.jsx)(t.p,{children:"This section takes you through Dyte's key concepts and the terminology."}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Organization"})})}),(0,n.jsxs)(t.p,{children:["In Dyte, the organization serves as the top-level entity where all participants of your group are added. You can create an organization through the ",(0,n.jsx)(t.a,{href:"https://dev.dyte.io",children:"Developer Portal"})," or  using the ",(0,n.jsx)(t.a,{href:"/api#/operations/createOrg",children:"API"})]}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Meetings are created within the organization."}),"\n",(0,n.jsx)(t.li,{children:"The API keys are generated for your organization. These API Keys are unique to your organization and are required to use Dyte REST APIs such as when instantiating a meeting."}),"\n",(0,n.jsx)(t.li,{children:"Additionally, Dyte considers the organization as a billing unit."}),"\n"]})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Meeting"})})}),(0,n.jsxs)(t.p,{children:["A communication channel created on Dyte is termed as a ",(0,n.jsx)(t.code,{children:"meeting"}),". Meetings can be created using the ",(0,n.jsx)(t.a,{href:"/api#/operations/create_meeting",children:"Create a meeting API"})," or through the ",(0,n.jsx)(t.a,{href:"https://dev.dyte.io/meetings",children:"Developer Portal"}),". Similarly, you can get the details of your meeting using the ",(0,n.jsx)(t.a,{href:"/api#/operations/get_all_meetings",children:"API"})," or ",(0,n.jsx)(t.a,{href:"https://dev.dyte.io/meetings",children:"Developer Portal"}),"."]}),(0,n.jsx)(t.p,{children:"An example from the Developer Portal displaying meeting details."}),(0,n.jsx)("img",{src:"/static/guides/concept-meeting.png",width:"800",height:"500",alt:"chat-sdk",className:"concept-meeting-live-video"})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Session"})})}),(0,n.jsxs)(t.p,{children:["In Dyte, a meeting is a communication channel, and each instance of that channel is called a session. A session represents an ongoing meeting or a meeting that happened. Like meetings, you can get fetch the details of a session via Developer Portal or using the ",(0,n.jsx)(t.a,{href:"/api#/operations/GetSessions",children:"APIs"}),".\nAfter a minute of all participants leaving, the session is ended and any participants that join after that will result in the creation of a new session."]}),(0,n.jsx)(t.p,{children:"An example from the Developer Portal displaying session details."}),(0,n.jsx)("img",{src:"/static/guides/session-details.png",width:"800",height:"500",alt:"chat-sdk",className:"session-details-live-video"})]}),"\n",(0,n.jsxs)(i,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Preset \ud83d\udea8"})})}),(0,n.jsx)(t.p,{children:"A preset is a set of permissions and UI configurations that are applied to participants for different meeting types such as Group Call, Webinar, and Livestream. The presets define how a meeting will appear visually and functional aspects of the meeting. They allow customization options like setting maximum number of participants on-screen, permissions to share screen, enabling poll creation, disabling video and audio, adjusting text color, configuring plugins, etc."}),(0,n.jsxs)(t.p,{children:["To create a preset, please refer to our Developer Portal's ",(0,n.jsx)(t.a,{href:"https://dev.dyte.io/presets",children:"Presets Section"}),"."]}),(0,n.jsx)("img",{src:"/static/guides/preset-editor-sample.png",width:"600",height:"300",alt:"preset-editor",className:"preset-editor-preview"})]}),"\n",(0,n.jsx)(t.h2,{id:"components",children:"Components"}),"\n",(0,n.jsx)(t.p,{children:"Now that you are familiar with the terminology of basic concepts on Dyte, we can take a look at how different parts of the Dyte system come together. The components are the REST API, core SDK , UIKit and a Developer Portal. Each of these serve different purposes and belong in different blocks of your application."}),"\n",(0,n.jsx)(t.p,{children:"Let's dive deeper into what purpose each of these components server."}),"\n",(0,n.jsx)(t.h3,{id:"developer-portal",children:"Developer Portal"}),"\n",(0,n.jsxs)(t.p,{children:["To begin with, let's start with our ",(0,n.jsx)(t.a,{href:"https://dev.dyte.io/dashboard",children:"dashboard"}),". This is where you will do a number of administrative tasks. This is your go-to-place for things like defining organisations, meeting logs, grabbing API Keys and billing operations.\nYou can also use Developer Portal to create meetings, presets, setup storage for recordings, add webhooks, and much more."]}),"\n",(0,n.jsx)("img",{src:"/static/guides/dev-portal.png",width:"600",height:"300",alt:"dev-portal",className:"dev-portal-preview"}),"\n",(0,n.jsx)(t.h3,{id:"rest-api",children:"REST API"}),"\n",(0,n.jsxs)(t.p,{children:["The REST APIs help ",(0,n.jsx)(t.strong,{children:"your server"})," orchestrate the meetings, the participants in them, the recordings etc. You can also observe your meetings and all the associated data with them."]}),"\n",(0,n.jsx)(t.h3,{id:"core-sdk",children:"Core SDK"}),"\n",(0,n.jsx)(t.p,{children:"The Core SDK provides all the client side business logic, handles media and networking and provides easy to use APIs to let you program the experience."}),"\n",(0,n.jsxs)(t.p,{children:["Initializing the Core SDK requires an ",(0,n.jsx)(t.code,{children:"authToken"})," which is unique to every participant in a meeting. The ",(0,n.jsx)(t.code,{children:"authToken"}),"is returned from the ",(0,n.jsx)(t.a,{href:"/api#/operations/add_participant",children:"Add Participant API"}),". The Core SDK itself does not provide any UI components and is a data-only API."]}),"\n",(0,n.jsx)(t.h3,{id:"ui-kit",children:"UI Kit"}),"\n",(0,n.jsx)(t.p,{children:"We provide a library of UI components that makes it easy to integrate video and voice calls into any app or website within minutes. You can either use it as a prebuilt setup where a single component provides you the entire functionality or you can mix and match - use some components from our library and build some of them on your own."}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)("title",{children:"Concepts Guide"}),(0,n.jsx)("meta",{name:"description",content:"Explore the fundamental concepts of live video with Dyte. Follow our guide for a comprehensive understanding of live video principles."})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);