"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[50511],{29238:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>a});var t=o(74848),i=o(28453);const c={title:"Room Connection Events",description:"Understand and handle room connection events in Android with Dyte's comprehensive documentation.",sidebar_position:2,tags:["mobile-core","android-core","connection events","reconnection"]},r="Room Connection Events",s={id:"room/room-connection-events",title:"Room Connection Events",description:"Understand and handle room connection events in Android with Dyte's comprehensive documentation.",source:"@site/docs/android-core/room/room-connection-events.mdx",sourceDirName:"room",slug:"/room/room-connection-events",permalink:"/docs/android-core/room/room-connection-events",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/android-core/room/room-connection-events.mdx",tags:[{label:"mobile-core",permalink:"/docs/android-core/tags/mobile-core"},{label:"android-core",permalink:"/docs/android-core/tags/android-core"},{label:"connection events",permalink:"/docs/android-core/tags/connection-events"},{label:"reconnection",permalink:"/docs/android-core/tags/reconnection"}],version:"current",lastUpdatedAt:1710757288,formattedLastUpdatedAt:"Mar 18, 2024",sidebarPosition:2,frontMatter:{title:"Room Connection Events",description:"Understand and handle room connection events in Android with Dyte's comprehensive documentation.",sidebar_position:2,tags:["mobile-core","android-core","connection events","reconnection"]},sidebar:"tutorialSidebar",previous:{title:"Room Metadata",permalink:"/docs/android-core/room/room-metadata"},next:{title:"Introducing chat",permalink:"/docs/android-core/chat/introduction"}},d={},a=[{value:"Connecting to room",id:"connecting-to-room",level:3},{value:"Connected to room",id:"connected-to-room",level:3},{value:"Room connection failed",id:"room-connection-failed",level:3},{value:"Disconnected from room",id:"disconnected-from-room",level:3},{value:"Reconnecting to room",id:"reconnecting-to-room",level:3},{value:"Reconnected to room",id:"reconnected-to-room",level:3},{value:"Room reconnection failed",id:"room-reconnection-failed",level:3}];function m(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"room-connection-events",children:"Room Connection Events"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"meeting"})," object emits various events to indicate changes in the connection status of the room. When a connection is lost,\nthe Dyte SDK detects it and attempts to reconnect the user to the meeting room automatically."]}),"\n",(0,t.jsxs)(n.p,{children:["You can subscribe to these events by implementing the ",(0,t.jsx)(n.code,{children:"DyteMeetingRoomEventsListener"})," callbacks and passing the object to\nthe ",(0,t.jsx)(n.code,{children:"meeting.addMeetingRoomEventsListener(dyteMeetingRoomEventsListener)"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The following are the room connection events:"}),"\n",(0,t.jsx)(n.h3,{id:"connecting-to-room",children:"Connecting to room"}),"\n",(0,t.jsx)(n.p,{children:"When the local user starts connecting to the meeting room during initialization, this event is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onConnectingToMeetingRoom() {\n      // connecting to meeting room\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"connected-to-room",children:"Connected to room"}),"\n",(0,t.jsx)(n.p,{children:"When the local user connects to the meeting room after initialization, this event is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onConnectedToMeetingRoom() {\n      // triggered once connected to meeting room\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"room-connection-failed",children:"Room connection failed"}),"\n",(0,t.jsx)(n.p,{children:"When the local user fails to connect to the meeting room during initialization, this event is triggered. This might occur\nbecause of internet connection issues."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onMeetingRoomConnectionFailed() {\n      // triggered once connection to the room is failed\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"disconnected-from-room",children:"Disconnected from room"}),"\n",(0,t.jsx)(n.p,{children:"When the local user disconnects while leaving the meeting room, this event is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onDisconnectedFromMeetingRoom() {\n      // triggered once disconnected from meeting room\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"reconnecting-to-room",children:"Reconnecting to room"}),"\n",(0,t.jsx)(n.p,{children:"When the Dyte SDK detects a connection drop and attempts to reconnect to the meeting room, this event is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onReconnectingToMeetingRoom() {\n      // triggered when reconnection is starting to the room\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"reconnected-to-room",children:"Reconnected to room"}),"\n",(0,t.jsx)(n.p,{children:"When the local user successfully reconnects to the meeting room, this event is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onReconnectedToMeetingRoom() {\n      // triggered once reconnection to the room is complete\n    }\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"room-reconnection-failed",children:"Room reconnection failed"}),"\n",(0,t.jsx)(n.p,{children:"When the local user fails to reconnect to the meeting room, this event is triggered. This occurs when the local user's\ninternet connection goes down for an extended period of time and the Dyte SDK is unable to reconnect despite multiple attempts."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object : DyteMeetingRoomEventsListener {\n    override fun onMeetingRoomReconnectionFailed() {\n      // triggered once re-connection to the room is failed\n    }\n});\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var t=o(96540);const i={},c=t.createContext(i);function r(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);