"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[46888],{72221:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>n,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>r});var o=i(74848),s=i(28453);const d={title:"Manage Media Devices",description:"Understand how to manage media devices for local users in Flutter. Follow Dyte's documentation for effective management of media devices.",sidebar_position:3,tags:["flutter-core","local-user","self","self events"]},c="Manage Media Devices",a={id:"local-user/manage-media-devices",title:"Manage Media Devices",description:"Understand how to manage media devices for local users in Flutter. Follow Dyte's documentation for effective management of media devices.",source:"@site/docs/flutter-core/local-user/manage-media-devices.mdx",sourceDirName:"local-user",slug:"/local-user/manage-media-devices",permalink:"/docs/flutter-core/local-user/manage-media-devices",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/local-user/manage-media-devices.mdx",tags:[{label:"flutter-core",permalink:"/docs/flutter-core/tags/flutter-core"},{label:"local-user",permalink:"/docs/flutter-core/tags/local-user"},{label:"self",permalink:"/docs/flutter-core/tags/self"},{label:"self events",permalink:"/docs/flutter-core/tags/self-events"}],version:"current",lastUpdatedAt:1709899166,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:3,frontMatter:{title:"Manage Media Devices",description:"Understand how to manage media devices for local users in Flutter. Follow Dyte's documentation for effective management of media devices.",sidebar_position:3,tags:["flutter-core","local-user","self","self events"]},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/flutter-core/local-user/events"},next:{title:"Sharing screen on iOS",permalink:"/docs/flutter-core/local-user/screen-share-iOS-guide"}},n={},r=[{value:"For audio devices:",id:"for-audio-devices",level:3},{value:"For video devices",id:"for-video-devices",level:3},{value:"Set Audio Device",id:"set-audio-device",level:2},{value:"Set Video Device",id:"set-video-device",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Head:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"manage-media-devices",children:"Manage Media Devices"}),"\n",(0,o.jsx)(t.p,{children:"Media devices represents the hardware for the camera, microphone and speaker\ndevices. To get the list of media devices that are currently being used, you can\nuse the following methods:"}),"\n",(0,o.jsx)(t.h3,{id:"for-audio-devices",children:"For audio devices:"}),"\n",(0,o.jsxs)(t.p,{children:["To get audio devices, use ",(0,o.jsx)(t.code,{children:"getAudioDevices()"})," method on ",(0,o.jsx)(t.code,{children:"localUser"})," object. It\nreturns ",(0,o.jsx)(t.code,{children:"List<DyteAudioDevice>"})," object, where each object in the list refers to\nan audio device of the system."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:"// Get all audio devices\nfinal audioDevices = await dyteClient.localUser.getAudioDevices();\n"})}),"\n",(0,o.jsx)(t.h3,{id:"for-video-devices",children:"For video devices"}),"\n",(0,o.jsxs)(t.p,{children:["To get audio devices, use ",(0,o.jsx)(t.code,{children:"getVideoDevices()"})," method on ",(0,o.jsx)(t.code,{children:"localUser"})," object. It\nreturns ",(0,o.jsx)(t.code,{children:"List<DyteVideoDevice>"})," object, where each object in the list refers to\nan video device of the system."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:"// Get all video devices\nfinal videoDevices = await dyteClient.localUser.getVideoDevices();\n"})}),"\n",(0,o.jsx)(t.h2,{id:"set-audio-device",children:"Set Audio Device"}),"\n",(0,o.jsxs)(t.p,{children:["To set an active audio device, you can call ",(0,o.jsx)(t.code,{children:"setAudioDevice()"})," method. This\ntakes a ",(0,o.jsx)(t.code,{children:"DyteAudioDevice"})," object that needs to be set active for audio."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:"await dyteClient.localUser.setAudioDevice(device);\n"})}),"\n",(0,o.jsx)(t.h2,{id:"set-video-device",children:"Set Video Device"}),"\n",(0,o.jsxs)(t.p,{children:["To set a active video device, you can call ",(0,o.jsx)(t.code,{children:"setVideoDevice()"})," method. This takes\na ",(0,o.jsx)(t.code,{children:"DyteVideoDevice"})," object that needs to be set active for video."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-dart",children:"await dyteClient.localUser.setVideoDevice(device);\n"})}),"\n",(0,o.jsxs)(i,{children:[(0,o.jsx)("title",{children:"Flutter Core Manage Media Devices"}),(0,o.jsx)("meta",{name:"description",content:"Understand how to manage media devices for local users in Flutter. Follow Dyte's documentation for effective management of media devices."})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>a});var o=i(96540);const s={},d=o.createContext(s);function c(e){const t=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(d.Provider,{value:t},e.children)}}}]);