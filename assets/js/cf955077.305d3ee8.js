"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[83939],{52776:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>v,frontMatter:()=>t,metadata:()=>a,toc:()=>r});var s=n(74848),d=n(28453);const t={title:"Manage Media Devices",description:"\"Effectively manage media devices on Android using Dyte's documentation",sidebar_position:3,tags:["web-core","local-user","self","self events"]},o="Manage Media Devices",a={id:"local-user/manage-media-devices",title:"Manage Media Devices",description:"\"Effectively manage media devices on Android using Dyte's documentation",source:"@site/docs/android-core/local-user/manage-media-devices.mdx",sourceDirName:"local-user",slug:"/local-user/manage-media-devices",permalink:"/docs/android-core/local-user/manage-media-devices",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/android-core/local-user/manage-media-devices.mdx",tags:[{label:"web-core",permalink:"/docs/android-core/tags/web-core"},{label:"local-user",permalink:"/docs/android-core/tags/local-user"},{label:"self",permalink:"/docs/android-core/tags/self"},{label:"self events",permalink:"/docs/android-core/tags/self-events"}],version:"current",lastUpdatedAt:1709899166,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:3,frontMatter:{title:"Manage Media Devices",description:"\"Effectively manage media devices on Android using Dyte's documentation",sidebar_position:3,tags:["web-core","local-user","self","self events"]},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/android-core/local-user/events"},next:{title:"Media Permissions",permalink:"/docs/android-core/local-user/manage-permissions"}},c={},r=[{value:"Set audio device",id:"set-audio-device",level:2},{value:"Set video device",id:"set-video-device",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components},{Head:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"manage-media-devices",children:"Manage Media Devices"}),"\n",(0,s.jsx)(i.p,{children:"Media devices represents the hardware for the camera, microphone and speaker\ndevices. To get the list of media devices that are currently being used, you can\nuse the following methods:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-kotlin",children:"// Get all audio devices\nval audioDevices: List<DyteAudioDevice> = meeting.self.getAudioDevices();\n\n// Get all video devices\nval videoDevices: List<DyteVideoDevice> = meeting.self.getVideoDevices();\n"})}),"\n",(0,s.jsx)(i.h2,{id:"set-audio-device",children:"Set audio device"}),"\n",(0,s.jsxs)(i.p,{children:["To set a device as an active device, you can call ",(0,s.jsx)(i.code,{children:"setAudioDevice"})," method. This\ntakes a ",(0,s.jsx)(i.code,{children:"DyteAudioDevice"})," object."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-kotlin",children:"meeting.self.setAudioDevice(device);\n"})}),"\n",(0,s.jsx)(i.h2,{id:"set-video-device",children:"Set video device"}),"\n",(0,s.jsxs)(i.p,{children:["To set a video device as an active device, you can call ",(0,s.jsx)(i.code,{children:"setVideoDevice"})," method.\nThis takes a ",(0,s.jsx)(i.code,{children:"DyteVideoDevice"})," object."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-kotlin",children:"meeting.self.setVideoDevice(device);\n"})}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("title",{children:"Android Core Manage Media Devices"}),(0,s.jsx)("meta",{name:"description",content:"Effectively manage media devices on Android using Dyte's documentation, ensuring seamless user experiences."})]})]})}function v(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var s=n(96540);const d={},t=s.createContext(d);function o(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);