"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[78252],{23317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=t(74848),i=t(28453);const s={title:"Migrate from OpenTok to Dyte with Shim",sidebar_position:2,description:"Learn how to use the OpenTok Shim by Dyte for seamless migration. Follow our guide for effective shim implementation and integration."},r=void 0,a={id:"migration/opentok/opentok-shim-by-dyte",title:"Migrate from OpenTok to Dyte with Shim",description:"Learn how to use the OpenTok Shim by Dyte for seamless migration. Follow our guide for effective shim implementation and integration.",source:"@site/docs/guides/migration/opentok/opentok-shim-by-dyte.mdx",sourceDirName:"migration/opentok",slug:"/migration/opentok/opentok-shim-by-dyte",permalink:"/docs/guides/migration/opentok/opentok-shim-by-dyte",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/migration/opentok/opentok-shim-by-dyte.mdx",tags:[],version:"current",lastUpdatedAt:1709899206,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:2,frontMatter:{title:"Migrate from OpenTok to Dyte with Shim",sidebar_position:2,description:"Learn how to use the OpenTok Shim by Dyte for seamless migration. Follow our guide for effective shim implementation and integration."},sidebar:"tutorialSidebar",previous:{title:"Concepts: Media",permalink:"/docs/guides/migration/opentok/concept-media-opentok"}},c={},d=[{value:"Start migrating from OpenTok to Dyte with Shim",id:"start-migrating-from-opentok-to-dyte-with-shim",level:2},{value:"Usage",id:"usage",level:2},{value:"Connection",id:"connection",level:3},{value:"Listen for the events",id:"listen-for-the-events",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The OpenTok ",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Shim_(computing)",children:"Shim"})," by Dyte is a package that allows you to migrate your video calling applications from ",(0,o.jsx)(n.a,{href:"https://tokbox.com/developer/",children:"OpenTok"})," to Dyte infrastructure."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Dyte provides a set of shim libraries that serve as seamless replacements for the Vonage video APIs (previously known as Tokbox OpenTok). These shims serve as a fundamental building block for migrating your application from OpenTok to Dyte infrastructure."}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"@dytesdk/opentok-shim"})," package serves as a wrapper over the Dyte SDK with an external API that is fully compatible with Opentok JS. As a drop-in replacement for Opentok JS, it can handle most of the methods and events that are present in the original library."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Please ",(0,o.jsx)(n.a,{href:"https://dyte.io/contact",children:"contact us"})," for any help or support with the migration."]}),"\n",(0,o.jsx)(n.h2,{id:"start-migrating-from-opentok-to-dyte-with-shim",children:"Start migrating from OpenTok to Dyte with Shim"}),"\n",(0,o.jsx)(n.p,{children:"To get started with the Dyte Shim for OpenTok, do the following:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Install the shim from the NPM registry using the following command:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:"npm",children:"npm install @dytesdk/opentok-shim\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Once you have installed the package, you can use it in your project by importing it using the following statement:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'import * as OT from "@dytesdk/opentok-shim";\n'})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"@dytesdk/opentok-shim"})," shares the same API as the OpenTok video SDK. You can use most of the methods that are supported by it."]}),"\n",(0,o.jsx)(n.p,{children:"Here are a few examples."}),"\n",(0,o.jsx)(n.h3,{id:"connection",children:"Connection"}),"\n",(0,o.jsxs)(n.p,{children:["To create a connection to an OpenTok session, you can use the ",(0,o.jsx)(n.code,{children:"OT.initSession()"})," method. This method takes the following arguments:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Token"}),"\n",(0,o.jsx)(n.li,{children:"Session ID"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can obtain Dyte authentication token ",(0,o.jsx)(n.code,{children:"<DYTE-AUTH-TOKEN>"})," using the ",(0,o.jsx)(n.a,{href:"/api#/operations/add_participant",children:"Add a Participant API"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const token = '<DYTE-AUTH-TOKEN>';\nconst sessionId = '';\nconst session = OT.initSession(token, sessionId);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"listen-for-the-events",children:"Listen for the events"}),"\n",(0,o.jsxs)(n.p,{children:["This establishes an OpenTok session and listens for events such as ",(0,o.jsx)(n.code,{children:"streamCreated"}),", ",(0,o.jsx)(n.code,{children:"connectionCreated"}),", and ",(0,o.jsx)(n.code,{children:"connectionDestroyed"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"session.on('streamCreated', function streamCreated(event) {\n  console.log('[streamCreated] index.ts: ', event.stream);\n  session.subscribe(\n    event.stream,\n    'subscriber',\n    {\n      insertMode: 'append',\n      width: '100%',\n      height: '100%',\n    },\n    handleError\n  );\n  // }\n});\n\nlet connections: OT.Connection[] = [];\nsession.on('connectionCreated', (connectionCreatedEvent) => {\n  console.log('session connectionCreatedEvent: ', connectionCreatedEvent);\n  connections.push(connectionCreatedEvent.connection);\n\n  if (\n    connections.find(\n      (connection) =>\n        connection.connectionId ===\n        connectionCreatedEvent.connection.connectionId\n    )\n  ) {\n    console.log('connection already exists');\n    return;\n  }\n  connections.push(connectionCreatedEvent.connection);\n});\n\nsession.on('connectionDestroyed', (connectionDestroyedEvent) => {\n  console.log('session connectionDestroyedEvent: ', connectionDestroyedEvent);\n  connections = connections.filter(\n    (connection) =>\n      connection.connectionId !==\n      connectionDestroyedEvent.connection.connectionId\n  );\n});\n"})}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("title",{children:"Migrate from OpenTok to Dyte with Shim Guide"}),(0,o.jsx)("meta",{name:"description",content:"Learn how to use the OpenTok Shim by Dyte for seamless migration. Follow our guide for effective shim implementation and integration."})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);