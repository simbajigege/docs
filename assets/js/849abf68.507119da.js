"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[84075],{86381:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(74848),t=i(28453);const r={title:"Introduction",description:"Local user setup guide.",sidebar_position:1,tags:["rn-core","local-user","self"]},l="Introduction - Local User",a={id:"local-user/introduction",title:"Introduction",description:"Local user setup guide.",source:"@site/docs/rn-core/local-user/introduction.mdx",sourceDirName:"local-user",slug:"/local-user/introduction",permalink:"/docs/rn-core/local-user/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/rn-core/local-user/introduction.mdx",tags:[{label:"rn-core",permalink:"/docs/rn-core/tags/rn-core"},{label:"local-user",permalink:"/docs/rn-core/tags/local-user"},{label:"self",permalink:"/docs/rn-core/tags/self"}],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Local user setup guide.",sidebar_position:1,tags:["rn-core","local-user","self"]},sidebar:"tutorialSidebar",previous:{title:"Quickstart",permalink:"/docs/rn-core/quickstart"},next:{title:"Events",permalink:"/docs/rn-core/local-user/events"}},o={},c=[{value:"Properties",id:"properties",level:2},{value:"Change default audio / video settings",id:"change-default-audio--video-settings",level:2},{value:"Setup tracks",id:"setup-tracks",level:2},{value:"Change the name of the local user",id:"change-the-name-of-the-local-user",level:2},{value:"Mute/Unmute microphone",id:"muteunmute-microphone",level:2},{value:"Enable/Disable camera",id:"enabledisable-camera",level:2},{value:"Enable / Disable Screen share",id:"enable--disable-screen-share",level:2}];function d(e){const n={code:"code",del:"del",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"introduction---local-user",children:"Introduction - Local User"}),"\n",(0,s.jsxs)(n.p,{children:["The local user has the methods and properties on the local user media controls.\nAccessible via ",(0,s.jsx)(n.code,{children:"self"})," key within the ",(0,s.jsx)(n.code,{children:"meeting"})," object, the local user also\ncontains the access control (permissions) and theming-related properties that\nwill help to render the meeting state."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.p,{children:"Here is a list of properties that local user provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"}),": The ID of the participant pertaining to local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userId"}),": The User ID of the participant pertaining to local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"organizationId"}),": The ID of the organization the meeting is created from."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": Contains Name of the local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isPinned"}),": A boolean value indicating if the local user is pinned or not."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"supportsRemoteControl"}),": A boolean value indicating if the meeting can\nsupports remote control."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"device"}),": Information like browser and OS details."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"picture"}),": Display picture URL for the local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"waitlistStatus"}),": Indicates if the local user has been waitlisted or not. It\ncan take the following values: ",(0,s.jsx)(n.code,{children:"accepted"})," | ",(0,s.jsx)(n.code,{children:"waiting"})," | ",(0,s.jsx)(n.code,{children:"rejected"})," | ",(0,s.jsx)(n.code,{children:"none"}),";"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"clientSpecificId"}),": Identifier provided by the developer while adding the\nparticipant."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"roomJoined"}),": A boolean value indicating if the local user has joined the\nmeeting."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"roomState"}),": Indicates the state of the user in the meeting. It\ncan take the following values: ",(0,s.jsx)(n.code,{children:"init"})," | ",(0,s.jsx)(n.code,{children:"joined"})," | ",(0,s.jsx)(n.code,{children:"waitlisted"})," | ",(0,s.jsx)(n.code,{children:"rejected"})," | ",(0,s.jsx)(n.code,{children:"kicked"})," | ",(0,s.jsx)(n.code,{children:"left"})," | ",(0,s.jsx)(n.code,{children:"ended"}),";"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"permissions"}),": The permissions related to various capabilities within a\nmeeting context for the local user"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mediaPermissions"}),": The current audio and video permissions given by the local\nuser."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"audioTrack"}),": The audio track for the local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rawAudioTrack"}),": The audio track for the local user without any middleware applied on it."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"videoTrack"}),": The video track for the local user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rawVideoTrack"}),": The video track for the local user without any middleware applied on it."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"screenShareTracks"}),": The screen share video and audio tracks for the local\nuser."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"audioEnabled"}),": A boolean value indicating if the audio currently enabled."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"videoEnabled"}),": A boolean value indicating if the video currently enabled."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"screenShareEnabled"}),": A boolean value indicating if the screen share is\ncurrently enabled."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"config"}),": The suggested theme for building the user interface."]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.del,{children:[(0,s.jsx)(n.code,{children:"suggestedTheme"}),": The suggested theme for building the user interface."]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.del,{children:[(0,s.jsx)(n.code,{children:"preview"}),": The local audio and video stream for the preview purpose (it will be populated after calling ",(0,s.jsx)(n.code,{children:"enablePreview"}),")."]})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"change-default-audio--video-settings",children:"Change default audio / video settings"}),"\n",(0,s.jsxs)(n.p,{children:["By default as soon as you join the meeting the SDK will produce your video and\naudio streams. To change this behaviour use the ",(0,s.jsx)(n.code,{children:"default"})," parameter"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"{5}",children:"const meeting = await DyteClient.init({\n  authToken,\n  defaults: {\n    audio: false, // Disable user's audio by default\n    video: true, // Enable user's video by default\n  },\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"setup-tracks",children:"Setup tracks"}),"\n",(0,s.jsxs)(n.p,{children:["If audio and video tracks are disabled during the ",(0,s.jsx)(n.code,{children:"DyteClient"})," initialization\nprocess. You can setup the audio and video tracks by simply calling setup tracks\nmethod like below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"meeting.self.setupTracks({ audio: true, video: true });\n"})}),"\n",(0,s.jsx)(n.h2,{id:"change-the-name-of-the-local-user",children:"Change the name of the local user"}),"\n",(0,s.jsxs)(n.p,{children:["Change the user's name by calling ",(0,s.jsx)(n.code,{children:"setName"})," method. The changed name will\nreflect across all participants ONLY if the change happens before joining the\nmeeting."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await meeting.self.setName('New Name');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"muteunmute-microphone",children:"Mute/Unmute microphone"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Mute Audio\nawait meeting.self.disableAudio();\n\n// Unmute Audio\nawait meeting.self.enableAudio();\n\n// Get current status\nmeeting.self.audioEnabled;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"enabledisable-camera",children:"Enable/Disable camera"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Disable Video\nawait meeting.self.disableVideo();\n\n// Enable Video\nawait meeting.self.enableVideo();\n\n// Get current status\nmeeting.self.videoEnabled;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"enable--disable-screen-share",children:"Enable / Disable Screen share"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Enable Screenshare\nawait meeting.self.enableScreenShare();\n\n// Disable Screenshare\nawait meeting.self.disableScreenShare();\n\n// Get current status\nmeeting.self.screenShareEnabled;\n"})}),"\n",(0,s.jsx)(i,{children:(0,s.jsx)("title",{children:"React Native Core Introduction"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);