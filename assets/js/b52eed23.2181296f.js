"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[70253],{66041:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=s(74848),n=s(28453);const r={title:"Stage management",sidebar_position:10,tags:["flutter-core","stage","livestream","webinar"]},i=void 0,c={id:"stage-management",title:"Stage management",description:"Access the stage APIs",source:"@site/docs/flutter-core/stage-management.mdx",sourceDirName:".",slug:"/stage-management",permalink:"/docs/flutter-core/stage-management",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/stage-management.mdx",tags:[{label:"flutter-core",permalink:"/docs/flutter-core/tags/flutter-core"},{label:"stage",permalink:"/docs/flutter-core/tags/stage"},{label:"livestream",permalink:"/docs/flutter-core/tags/livestream"},{label:"webinar",permalink:"/docs/flutter-core/tags/webinar"}],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:10,frontMatter:{title:"Stage management",sidebar_position:10,tags:["flutter-core","stage","livestream","webinar"]},sidebar:"tutorialSidebar",previous:{title:"Recording",permalink:"/docs/flutter-core/recording"},next:{title:"Waiting room",permalink:"/docs/flutter-core/waiting-room"}},d={},l=[{value:"Access the stage APIs",id:"access-the-stage-apis",level:2},{value:"Properties",id:"properties",level:2},{value:"Status",id:"status",level:3},{value:"Host Controls",id:"host-controls",level:2},{value:"Join stage",id:"join-stage",level:3},{value:"Leave stage",id:"leave-stage",level:3},{value:"Grant stage access",id:"grant-stage-access",level:3},{value:"Deny stage access",id:"deny-stage-access",level:3},{value:"Kick participant from stage",id:"kick-participant-from-stage",level:3},{value:"Participant controls",id:"participant-controls",level:2},{value:"Request access",id:"request-access",level:3},{value:"Withdraw join request",id:"withdraw-join-request",level:3},{value:"Stage Events",id:"stage-events",level:2}];function o(e){const t={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"access-the-stage-apis",children:"Access the stage APIs"}),"\n",(0,a.jsx)(t.p,{children:"Stage feature is useful when you're using webinar/livestream. We allow central stage methods for both call types."}),"\n",(0,a.jsx)(t.p,{children:"Using Dyte's stage management APIs a user can do actions such as request to join, join/leave stage, grant/deny stage access to other users, etc."}),"\n",(0,a.jsx)(t.p,{children:"All stage APIs are accessible by following excerpt:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"final stage = dyteClient.stage;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"status",children:"Status"}),"\n",(0,a.jsx)(t.p,{children:"The following method returns the current stage status of the local user."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"final DyteStageStatus stageStatus = dyteClient.stage.status;\n"})}),"\n",(0,a.jsx)(t.p,{children:"It can have the following values:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"DyteStageStatus.onStage : This value indicates that the user is currently on the stage."}),"\n",(0,a.jsx)(t.li,{children:"DyteStageStatus.offStage : This value means that the user is viewing the webinar/livestream but is not on the stage."}),"\n",(0,a.jsx)(t.li,{children:"DyteStageStatus.requestedToJoinStage : The user has a pending request to join stage. This value will be assigned to their status until the host accepts or rejects their request."}),"\n",(0,a.jsx)(t.li,{children:"DyteStageStatus.acceptedToJoinStage : The host has accepted user's request to join stage. If the host accepts the user's request to join the stage, this value will be assigned to the user's status."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"host-controls",children:"Host Controls"}),"\n",(0,a.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,a.jsx)(t.p,{children:"These methods are preset dependent, hence if a user's preset doesn't allow certain host actions, calling the API won't change anything."})}),"\n",(0,a.jsx)(t.p,{children:"Dyte's stage management APIs allow hosts to receive and manage stage requests as well as leave and join the stage."}),"\n",(0,a.jsx)(t.h3,{id:"join-stage",children:"Join stage"}),"\n",(0,a.jsx)(t.p,{children:"This method enables the user to be on stage and let them interact with other peers in the meeting."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.join();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"leave-stage",children:"Leave stage"}),"\n",(0,a.jsx)(t.p,{children:"This method lets user leave the stage and. Additionally, their audio/video will no longet be visible to others in the room."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.leave();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"grant-stage-access",children:"Grant stage access"}),"\n",(0,a.jsxs)(t.p,{children:["A privileged user can grant access to stage for a set of users with ",(0,a.jsx)(t.code,{children:"grantAccess"})," method."]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Parameters"})}),(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Type"})})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"peer"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.em,{children:"DyteJoinedMeetingParticipant"})})]})})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.grantAccess(peer);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To grant access to all stage requests at a time, you can user ",(0,a.jsx)(t.code,{children:"grantAccessToAll()"})," method. This method takes no parameters."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.grantAccessToAll();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"deny-stage-access",children:"Deny stage access"}),"\n",(0,a.jsxs)(t.p,{children:["A privileged user can deny access to stage for a set of users with ",(0,a.jsx)(t.code,{children:"denyAccess"})," method."]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Parameters"})}),(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Type"})})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"peer"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.em,{children:"DyteJoinedMeetingParticipant"})})]})})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.denyAccess(peer);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To deny all stage requests at a time, you can user ",(0,a.jsx)(t.code,{children:"denyAccessToAll()"})," method. This method takes no parameters."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.denyAccessToAll();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"kick-participant-from-stage",children:"Kick participant from stage"}),"\n",(0,a.jsxs)(t.p,{children:["A privileged user can kick a participant from stage with ",(0,a.jsx)(t.code,{children:"kick"})," method."]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Parameters"})}),(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Type"})})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"peer"}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.em,{children:"DyteJoinedMeetingParticipant"})})]})})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.kick(peer);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"participant-controls",children:"Participant controls"}),"\n",(0,a.jsx)(t.p,{children:"Dyte's stage management APIs allow participant to receive and manage stage requests as well as leave and join the stage."}),"\n",(0,a.jsx)(t.h3,{id:"request-access",children:"Request access"}),"\n",(0,a.jsx)(t.p,{children:"This method is used to create a new stage request which can be approved by the host."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.requestAccess();\n"})}),"\n",(0,a.jsx)(t.h3,{id:"withdraw-join-request",children:"Withdraw join request"}),"\n",(0,a.jsx)(t.p,{children:"You can call this method in order to cancel your stage request."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.stage.withdrawJoinRequest();\n"})}),"\n",(0,a.jsx)(t.h2,{id:"stage-events",children:"Stage Events"}),"\n",(0,a.jsx)(t.p,{children:"To be able to listen to stage events, you need to attach a stage events listener as:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"class StageEventListener extends DyteStageEventsListener {\n  ...\n\n  @override\n  void onStageStatusUpdated(DyteStageStatus status) {\n    // Update your UI as per this stage status.\n  }\n  ...\n}\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"dyteClient.addStageEventsListener(StageEventsListener())\n"})}),"\n",(0,a.jsx)(t.p,{children:"When the stage status of local user is updated, this event is triggered. It contains updated stage status as an argument."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-dart",children:"@override\nvoid onStageStatusUpdated(DyteStageStatus status){\n  // Update your UI/ manage you state as per this stage status.\n}\n"})}),"\n",(0,a.jsx)(t.p,{children:"Here are a list of events the stage occurs:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Event"})}),(0,a.jsx)(t.th,{children:(0,a.jsx)(t.strong,{children:"Description"})})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"onStageRequestsUpdated"})}),(0,a.jsxs)(t.td,{children:["Emitted when stageRequests changes. This event also contain a list of updated requests in the payload as ",(0,a.jsx)(t.code,{children:"accessRequests"})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"onStageStatusUpdated"})}),(0,a.jsxs)(t.td,{children:["Emitted when the user's stage status changes. It contains the updated stage status in the payload as ",(0,a.jsx)(t.code,{children:"stageStatus"}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"onParticipantRemovedFromStage"})}),(0,a.jsxs)(t.td,{children:["Emitted when a participant is removed from stage. It contains the participant that is removed in the payload as ",(0,a.jsx)(t.code,{children:"participant"})]})]})]})]}),"\n",(0,a.jsx)(s,{children:(0,a.jsx)("title",{children:"Flutter Core Stage management"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var a=s(96540);const n={},r=a.createContext(n);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);