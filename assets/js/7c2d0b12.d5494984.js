"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[13964],{30154:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>r});var n=s(74848),a=s(28453);const i={title:"Editing Chat Messages",description:"Edit chat messages that you have sent in a meeting.",sidebar_position:4,tags:["rn-core","chat"]},c=void 0,d={id:"chat/edit-chat-messages",title:"Editing Chat Messages",description:"Edit chat messages that you have sent in a meeting.",source:"@site/docs/rn-core/chat/edit-chat-messages.mdx",sourceDirName:"chat",slug:"/chat/edit-chat-messages",permalink:"/docs/rn-core/chat/edit-chat-messages",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/rn-core/chat/edit-chat-messages.mdx",tags:[{label:"rn-core",permalink:"/docs/rn-core/tags/rn-core"},{label:"chat",permalink:"/docs/rn-core/tags/chat"}],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:4,frontMatter:{title:"Editing Chat Messages",description:"Edit chat messages that you have sent in a meeting.",sidebar_position:4,tags:["rn-core","chat"]},sidebar:"tutorialSidebar",previous:{title:"Receiving chat messages",permalink:"/docs/rn-core/chat/receiving-chat-messages"},next:{title:"Other chat functions",permalink:"/docs/rn-core/chat/other-chat-functions"}},o={},r=[{value:"Edit a text message",id:"edit-a-text-message",level:2},{value:"Edit an image",id:"edit-an-image",level:2},{value:"Edit a file",id:"edit-a-file",level:2},{value:"Extra",id:"extra",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"As mentioned in introduction, there are 3 types of chat messages - text\nmessages, images, and files. There is a method in meeting.chat to edit a message\nof each type."}),"\n",(0,n.jsx)(t.h2,{id:"edit-a-text-message",children:"Edit a text message"}),"\n",(0,n.jsxs)(t.p,{children:["To edit a text message, the ",(0,n.jsx)(t.code,{children:"meeting.chat.editTextMessage()"})," method can be used.\nThis accepts a ",(0,n.jsx)(t.code,{children:"messageId"})," (type ",(0,n.jsx)(t.code,{children:"string"}),") and a ",(0,n.jsx)(t.code,{children:"message"})," (type ",(0,n.jsx)(t.code,{children:"string"}),")."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const message = meeting.chat.messages[0];\nconst messageId = message?.id;\nconst newMessage = 'Is this the real life?';\nawait meeting.chat.editTextMessage(messageId, newMessage);\n"})}),"\n",(0,n.jsx)(t.h2,{id:"edit-an-image",children:"Edit an image"}),"\n",(0,n.jsxs)(t.p,{children:["You can send an image with the help of meeting.chat.editImageMessage(). This\naccepts a ",(0,n.jsx)(t.code,{children:"messageId"})," of type ",(0,n.jsx)(t.code,{children:"string"})," and an image of type ",(0,n.jsx)(t.code,{children:"File"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"async function onEditImage() {\n  const messageId = '...';\n  // Get the image uri and create an object with the following fields\n  const res = await DocumentPicker.pickSingle({\n    type: [DocumentPicker.types.images],\n  });\n  const image = {\n    uri: res.uri,\n    name: res.name,\n    size: res.size,\n    type: res.type,\n  };\n  await meeting.chat.editImageMessage(messageId, image);\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"edit-a-file",children:"Edit a file"}),"\n",(0,n.jsxs)(t.p,{children:["Editing a file is quite similar to editing an image. To edit a file use\n",(0,n.jsx)(t.code,{children:"meeting.chat.editFileMessage()"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"async function onEditFile() {\n  const messageId = '...';\n  // Get the file uri and create an object with the following fields\n  const res = await DocumentPicker.pickSingle({\n    type: [DocumentPicker.types.allFiles],\n  });\n  const file = {\n    uri: res.uri,\n    name: res.name,\n    size: res.size,\n    type: res.type,\n  };\n  await meeting.chat.editFileMessage(messageId, file);\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"extra",children:"Extra"}),"\n",(0,n.jsxs)(t.p,{children:["There is also a common method called ",(0,n.jsx)(t.code,{children:"meeting.chat.editMessage()"})," that can be\nused to edit any of the 3 types of messages displayed above. It essentially\ncalls one of the methods from above depending upon the type of payload you send\nto the method. The ",(0,n.jsx)(t.code,{children:"editMessage()"})," method accepts a parameters ",(0,n.jsx)(t.code,{children:"messageId"}),"\n",(0,n.jsx)(t.code,{children:"message"})," of the following type:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"async function editMessage(\n    messageId: string,\n    message: { type: 'text', message: string }\n        | { type: 'image', image: File }\n        | { type: 'file', file: File },\n) {...}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Here's how you would use the ",(0,n.jsx)(t.code,{children:"editMessage()"})," method to edit a text message."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const messageId = '...';\nconst message = 'Is this just fantasy?';\nawait meeting.chat.sendMessage(messageId, { type: 'text', message });\n"})}),"\n",(0,n.jsx)(s,{children:(0,n.jsx)("title",{children:"React Native Core Editing Chat Messages"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>d});var n=s(96540);const a={},i=n.createContext(a);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);