"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[7738],{91131:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var i=n(74848),a=n(28453);const r={title:"Participant object",description:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app.",sidebar_position:2,tags:["flutter-core","participants","participant"]},o="The Participant object",c={id:"participants/participant-object",title:"Participant object",description:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app.",source:"@site/docs/flutter-core/participants/participant-object.mdx",sourceDirName:"participants",slug:"/participants/participant-object",permalink:"/docs/flutter-core/participants/participant-object",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/flutter-core/participants/participant-object.mdx",tags:[{label:"flutter-core",permalink:"/docs/flutter-core/tags/flutter-core"},{label:"participants",permalink:"/docs/flutter-core/tags/participants"},{label:"participant",permalink:"/docs/flutter-core/tags/participant"}],version:"current",lastUpdatedAt:1710134090,formattedLastUpdatedAt:"Mar 11, 2024",sidebarPosition:2,frontMatter:{title:"Participant object",description:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app.",sidebar_position:2,tags:["flutter-core","participants","participant"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/flutter-core/participants/introduction"},next:{title:"Participant Events",permalink:"/docs/flutter-core/participants/events"}},d={},s=[{value:"Audio/Video updates for participant",id:"audiovideo-updates-for-participant",level:2},{value:"Host controls methods",id:"host-controls-methods",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"the-participant-object",children:"The Participant object"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"DyteMeetingParticipant"})," object consists of all the information related to a\nparticular participant. For instance, it contains a participants\nvideo/audio/screenshare stream, and the participant's name. It also contains\nstate variables that indicate whether a participant's camera is on or off, and\nwhether they are muted or unmuted."]}),"\n",(0,i.jsx)(t.p,{children:"The participant object has the following properties."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"id"}),": The ",(0,i.jsx)(t.code,{children:"participantId"})," of the participant (aka ",(0,i.jsx)(t.code,{children:"peerId"}),")."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"userId"}),": The ",(0,i.jsx)(t.code,{children:"userId"})," of the participant."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"name"}),": Contains participant's name."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"picture"}),": Contains participant's picture (if any)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"isHost"}),": Boolean value indicating whether this user is host of current\nmeeting or not."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"clientSpecificId"}),": Arbitrary ID that can be set to identify the participant."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"videoEnabled"}),": Set to true if the participant's camera is on."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"audioEnabled"}),": Set to true if the participant is unmuted."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"You can subscribe to various participants events. For subscribing:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Implement ",(0,i.jsx)(t.code,{children:"DyteParticipantEventsListener"})," to a class say\n",(0,i.jsx)(t.code,{children:"ParticipantEventListener"}),", and listen to event from\n",(0,i.jsx)(t.code,{children:"DyteParticipantEventsListener"})," by overriding them. This class can be user to\nmanage your state in the application."]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"class ParticipantEventListener extends DyteParticipantEventsListener {\n\n  @override\n  void onAudioUpdate({\n    required bool audioEnabled,\n    required DyteJoinedMeetingParticipant participant,\n  }) {\n    /// handle audioUpdate of `DyteJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onActiveSpeakerChanged(DyteJoinedMeetingParticipant participant) {\n    /// handle active speaker changing to `DyteJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onNoActiveSpeaker() {\n    /// handle no active speaker\n  }\n\n  @override\n  void onParticipantPinned(DyteJoinedMeetingParticipant participant) {\n    /// handle pinning of `DyteJoinedMeetingParticipant` participant\n  }\n\n\n  @override\n  void onParticipantUnpinned(DyteJoinedMeetingParticipant participant) {\n    /// handle unpinning the pinned participant\n  }\n\n  @override\n  void onScreenShareStarted(DyteJoinedMeetingParticipant participant) {\n    /// handle screen share started of `DyteJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onScreenShareEnded(DyteJoinedMeetingParticipant participant) {\n    /// handle screen share ended of `DyteJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onVideoUpdate({\n    required bool videoEnabled,\n    required DyteJoinedMeetingParticipant participant,\n  }) {\n    /// handle videoUpdate of `DyteJoinedMeetingParticipant` participant\n  }\n\n}\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Now to subscribe, pass the instance of ",(0,i.jsx)(t.code,{children:"DyteParticipantEventsListener"})," class\ncreated above to ",(0,i.jsx)(t.code,{children:"addParticipantEventsListener()"})," method of ",(0,i.jsx)(t.code,{children:"dyteClient"}),"\ninstance as follows:"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",metastring:"{2}",children:"dyteClient.addParticipantEventsListener(ParticipantEventListener());\n"})}),"\n",(0,i.jsx)(t.h2,{id:"audiovideo-updates-for-participant",children:"Audio/Video updates for participant"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"\n...\n\n@override\nvoid onVideoUpdate(bool videoEnabled) {\n  if (videoEnabled) {\n      // video is enabled, and other participants in room can see local user\n    } else {\n      // video is disabled, and other participants in room can not see local user.\n    }\n}\n\n@override\nvoid onAudioUpdate({\n  required bool audioEnabled,\n  required DyteJoinedMeetingParticipant participant,\n}) {\n    if (audioEnabled) {\n      // audio is enabled, and other participants in room can hear local user\n    } else {\n      // audio is disabled, and other participants in room can not hear local user.\n    }\n}\n\n...\n\n"})}),"\n",(0,i.jsx)(t.h2,{id:"host-controls-methods",children:"Host controls methods"}),"\n",(0,i.jsx)(t.p,{children:"If you (the local user) have the relevant permissions in the meeting, you can\ndisable a participant's video/audio streams, or even remove them from the\nmeeting."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"final participant = meeting.participants.joined.first;\n\n// To disable a participant's video stream\nparticipant.disableVideo();\n\n// To disable a participant's audio stream\nparticipant.disableAudio();\n\n// To kick a participant from the meeting\nparticipant.kick();\n\n// to pin a participant in a meeting\nparticipant.pin();\n\n"})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("title",{children:"Flutter Core The participant object"}),(0,i.jsx)("meta",{name:"description",content:"Understand the participant object and its integration in Flutter. Follow Dyte's documentation for effective implementation in your app."})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);