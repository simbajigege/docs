"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[93313],{49760:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var i=t(74848),s=t(28453);const d={title:"Exchange data between plugin and meeting",sidebar_position:2,description:"Learn how to exchange data between your plugin and meetings with the Dyte Plugin SDK. Enable dynamic interactions and customization."},o=void 0,a={id:"guides/exchange-data-between-plugin-and-meeting",title:"Exchange data between plugin and meeting",description:"Learn how to exchange data between your plugin and meetings with the Dyte Plugin SDK. Enable dynamic interactions and customization.",source:"@site/docs/plugin-sdk/guides/exchange-data-between-plugin-and-meeting.mdx",sourceDirName:"guides",slug:"/guides/exchange-data-between-plugin-and-meeting",permalink:"/docs/plugin-sdk/guides/exchange-data-between-plugin-and-meeting",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/plugin-sdk/guides/exchange-data-between-plugin-and-meeting.mdx",tags:[],version:"current",lastUpdatedAt:1709899206,formattedLastUpdatedAt:"Mar 8, 2024",sidebarPosition:2,frontMatter:{title:"Exchange data between plugin and meeting",sidebar_position:2,description:"Learn how to exchange data between your plugin and meetings with the Dyte Plugin SDK. Enable dynamic interactions and customization."},sidebar:"tutorialSidebar",previous:{title:"How to work with Plugin Stores",permalink:"/docs/plugin-sdk/guides/how-to-work-with-plugin-stores"},next:{title:"Frequently Asked Questions",permalink:"/docs/plugin-sdk/frequently-asked-questions"}},l={},c=[{value:"Client SDK",id:"client-sdk",level:2},{value:"Send custom messages to plugin SDK",id:"send-custom-messages-to-plugin-sdk",level:3},{value:"Listen for custom events from plugin SDK",id:"listen-for-custom-events-from-plugin-sdk",level:3},{value:"Plugin SDK",id:"plugin-sdk",level:2},{value:"Send custom events to the dyte meeting",id:"send-custom-events-to-the-dyte-meeting",level:3},{value:"Listen for custom messages from the dyte meeting",id:"listen-for-custom-messages-from-the-dyte-meeting",level:3}];function r(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Plugin SDK allows you to exchange data between the dyte meeting and the plugin.\nThis guide talks about how this can be done:"}),"\n",(0,i.jsx)(n.h2,{id:"client-sdk",children:"Client SDK"}),"\n",(0,i.jsx)(n.h3,{id:"send-custom-messages-to-plugin-sdk",children:"Send custom messages to plugin SDK"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ready"})," event is emitted once the plugin is ready to accept data from the\nclient SDK. all custom events must be sent only after this event is emitted."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"sendData"})," method accepts an object with the following properties:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventName"}),(0,i.jsx)(n.td,{children:"Name of the event."}),(0,i.jsx)(n.td,{children:"string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"data"}),(0,i.jsx)(n.td,{children:"The data you wish to send to the plugin."}),(0,i.jsx)(n.td,{children:"any"})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('ready', () => {\n  plugin.sendData({\n    eventName: 'customEventToPlugin',\n    data: '<your-custom-data>',\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"listen-for-custom-events-from-plugin-sdk",children:"Listen for custom events from plugin SDK"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('myAwesomeEvent', (data) => {\n  console.log(data);\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"plugin-sdk",children:"Plugin SDK"}),"\n",(0,i.jsx)(n.h3,{id:"send-custom-events-to-the-dyte-meeting",children:"Send custom events to the dyte meeting"}),"\n",(0,i.jsx)(n.p,{children:"The emitEvent method is used to emit custom events to the (client SDK) room."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import DytePlugin from \"@dytesdk/plugin-sdk\";\n\nconst plugin = DytePlugin.init();\n\nplugin.room.emitEvent('myAwesomeEvent', {...});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"listen-for-custom-messages-from-the-dyte-meeting",children:"Listen for custom messages from the dyte meeting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import DytePlugin from '@dytesdk/plugin-sdk';\n\nconst plugin = DytePlugin.init();\n\nplugin.room.on('customEventToPlugin', (data) => {\n  console.log(data);\n});\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("title",{children:"Plugin SDK Exchange data between plugin and meeting"}),(0,i.jsx)("meta",{name:"description",content:"Learn how to exchange data between your plugin and meetings with the Dyte Plugin SDK. Enable dynamic interactions and customization."})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const s={},d=i.createContext(s);function o(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);