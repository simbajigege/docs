"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[5522],{7289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(74848),i=n(28453);const r={title:"Transcriptions - Google STT",sidebar_position:4,sidebar_slug:"transcriptions-google"},s="Integration Steps",a={id:"capabilities/audio/transcriptionGoogle",title:"Transcriptions - Google STT",description:"To add the realtime audio transcriptions in a Dyte meeting you can use Google Cloud Speech-to-Text and Cloud translation APIs.",source:"@site/docs/guides/capabilities/audio/transcriptionGoogle.mdx",sourceDirName:"capabilities/audio",slug:"/capabilities/audio/transcriptionGoogle",permalink:"/docs/guides/capabilities/audio/transcriptionGoogle",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/capabilities/audio/transcriptionGoogle.mdx",tags:[],version:"current",lastUpdatedAt:1709105024,formattedLastUpdatedAt:"Feb 28, 2024",sidebarPosition:4,frontMatter:{title:"Transcriptions - Google STT",sidebar_position:4,sidebar_slug:"transcriptions-google"},sidebar:"tutorialSidebar",previous:{title:"Transcriptions - AWS Transcribe",permalink:"/docs/guides/capabilities/audio/transcriptionAWS"},next:{title:"Processing - Middlewares",permalink:"/docs/guides/capabilities/video/processing"}},l={},c=[{value:"1. Setup Google Cloud Credentials",id:"1-setup-google-cloud-credentials",level:2},{value:"2. Setup a Server",id:"2-setup-a-server",level:2},{value:"2.1 Environment Setup",id:"21-environment-setup",level:3},{value:"2.2 Run the server",id:"22-run-the-server",level:3},{value:"Frontend Setup",id:"frontend-setup",level:2},{value:"3.1 Installation",id:"31-installation",level:3},{value:"3.2 Integrate",id:"32-integrate",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"To add the realtime audio transcriptions in a Dyte meeting you can use Google Cloud Speech-to-Text and Cloud translation APIs."}),"\n",(0,o.jsx)(t.p,{children:"These Google services are paid, a Google Cloud account is required to proceed."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"This integration is Web only at the moment"})}),"\n",(0,o.jsx)(t.h1,{id:"integration-steps",children:"Integration Steps"}),"\n",(0,o.jsx)(t.h2,{id:"1-setup-google-cloud-credentials",children:"1. Setup Google Cloud Credentials"}),"\n",(0,o.jsx)(t.p,{children:"You must have a project & a service account with GCP (Google Cloud Platform) to use Google transcriptions. Make sure that service account allows Google Speech-to-Text and Google Translation API."}),"\n",(0,o.jsx)(t.p,{children:"Once done, download the keys for the service account."}),"\n",(0,o.jsx)(t.h2,{id:"2-setup-a-server",children:"2. Setup a Server"}),"\n",(0,o.jsx)(t.p,{children:"Setup a server to forward the Audio Data from client to Google Cloud. You don't want to put your GCP credentials on client side and therefore need a server which forwards audio data to Google Cloud"}),"\n",(0,o.jsxs)(t.p,{children:["For this, we have provided a sample in NodeJS for you to checkout (dyte-io/google-transcription)[",(0,o.jsx)(t.a,{href:"https://github.com/dyte-io/google-transcription/tree/main/server",children:"https://github.com/dyte-io/google-transcription/tree/main/server"}),"]."," Please find it here. Currently, we only have NodeJS samples; if you're working on a different backend, feel free to port this code."]}),"\n",(0,o.jsx)(t.p,{children:"To use this sample, please clone the repository using the following command."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"git clone git@github.com:dyte-io/google-transcription.git\n"})}),"\n",(0,o.jsx)(t.h3,{id:"21-environment-setup",children:"2.1 Environment Setup"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"cp .env.example .env\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Edit the ",(0,o.jsx)(t.code,{children:".env"})," file as per your GCP service account credentials and Save it."]}),"\n",(0,o.jsx)(t.p,{children:"Note: PRIVATE_KEY should be in a single line. Try picking the value from the service account's key's JSON file as is."}),"\n",(0,o.jsx)(t.h3,{id:"22-run-the-server",children:"2.2 Run the server"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"npm install\n"})}),"\n",(0,o.jsx)(t.p,{children:"This would automatically install @google-cloud/speech, and @google-cloud/translate."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"npm run dev\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The HTTP endpoint where this server is accessible will now be called ",(0,o.jsx)(t.code,{children:"backend_url"})," for remaining section of the guide"]}),"\n",(0,o.jsx)(t.h2,{id:"frontend-setup",children:"Frontend Setup"}),"\n",(0,o.jsx)(t.h3,{id:"31-installation",children:"3.1 Installation"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"npm install @dytesdk/google-transcription\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Source available at (dyte-io/google-transcription)(",(0,o.jsx)(t.a,{href:"https://github.com/dyte-io/google-transcription/tree/main/client",children:"https://github.com/dyte-io/google-transcription/tree/main/client"}),")"]}),"\n",(0,o.jsx)(t.h3,{id:"32-integrate",children:"3.2 Integrate"}),"\n",(0,o.jsx)(t.p,{children:"The second step is to look for the place in your codebase where you are initiating a Dyte meeting."}),"\n",(0,o.jsx)(t.p,{children:"Once you have found the place and got a hold of the meeting object, add the following code to the file to import the SDK."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"import DyteGoogleSpeechRecognition from '@dytesdk/google-transcription';\n"})}),"\n",(0,o.jsx)(t.p,{children:"Add the following code just after the point where you have access to the meeting object."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"const speech = new DyteGoogleSpeechRecognition({\n    meeting, // Dyte meeting object from DyteClient.init\n    target: 'hi', // Language that the current user wants to see\n    source: 'en-US', // Language that the current user would speak in\n    baseUrl: <backend-url>, // Backend URL from step 2.2\n});\n\nspeech.on('transcription', async (data) => {\n    // ... do something with transcription\n});\n\nspeech.transcribe();\n"})}),"\n",(0,o.jsx)(t.p,{children:"Here you are setting up the GoogleSpeechRecognition with the values that the current user would prefer and activating the recognition just afterward using speech.transcribe(). Then we listen to every new transcription using speech.on('transcription', aJsCallbackFunction)"}),"\n",(0,o.jsx)(t.p,{children:"To see the support languages, please refer to"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://cloud.google.com/speech-to-text/docs/speech-to-text-supported-languages",children:"https://cloud.google.com/speech-to-text/docs/speech-to-text-supported-languages"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://cloud.google.com/translate/docs/languages",children:"https://cloud.google.com/translate/docs/languages"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"With this, you would now be able to receive the live transcriptions.\nFeel free to put them in UI as per your need."}),"\n",(0,o.jsxs)(t.p,{children:["If you need a sample of this guide, please refer to ",(0,o.jsx)(t.a,{href:"https://github.com/dyte-io/google-transcription/blob/main/client/demo/index.ts",children:"https://github.com/dyte-io/google-transcription/blob/main/client/demo/index.ts"})]}),"\n",(0,o.jsx)(n,{children:(0,o.jsx)("title",{children:"Transcriptions - Google STT Guide"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(96540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);