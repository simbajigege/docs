"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[90921],{87316:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var o=t(74848),i=t(28453);const c={sidebar_position:2,keywords:["opensource"]},s="Initialization",a={id:"socketio-client/initialization",title:"Initialization",description:"Table of content",source:"@site/docs/community-packages/socketio-client/initialization.mdx",sourceDirName:"socketio-client",slug:"/socketio-client/initialization",permalink:"/docs/community-packages/socketio-client/initialization",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/community-packages/socketio-client/initialization.mdx",tags:[],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2,keywords:["opensource"]},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/community-packages/socketio-client/"},next:{title:"Events",permalink:"/docs/community-packages/socketio-client/emitting"}},r={},l=[{value:"Creation of a Socket instance",id:"creation-of-a-socket-instance",level:2},{value:"Connection",id:"connection",level:3},{value:"Custom Path",id:"custom-path",level:3},{value:"Query Params",id:"query-params",level:3},{value:"Default values",id:"default-values",level:2},{value:"Description",id:"description",level:2},{value:"IO factory options",id:"io-factory-options",level:3},{value:"<code>forceNew</code>",id:"forcenew",level:4},{value:"<code>multiplex</code>",id:"multiplex",level:4},{value:"Low-level engine options",id:"low-level-engine-options",level:3},{value:"<code>transports</code>",id:"transports",level:4},{value:"<code>upgrade</code>",id:"upgrade",level:4},{value:"<code>rememberUpgrade</code>",id:"rememberupgrade",level:4},{value:"<code>extraHeaders</code>",id:"extraheaders",level:4},{value:"Manager options",id:"manager-options",level:3},{value:"<code>reconnection</code>",id:"reconnection",level:4},{value:"<code>reconnectionAttempts</code>",id:"reconnectionattempts",level:4},{value:"<code>reconnectionDelay</code>",id:"reconnectiondelay",level:4},{value:"<code>reconnectionDelayMax</code>",id:"reconnectiondelaymax",level:4},{value:"<code>randomizationFactor</code>",id:"randomizationfactor",level:4},{value:"<code>timeout</code>",id:"timeout",level:4},{value:"Socket options",id:"socket-options",level:3},{value:"Multiplexing",id:"multiplexing",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"initialization",children:"Initialization"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Table of content"})}),"\n",(0,o.jsx)(n.h2,{id:"creation-of-a-socket-instance",children:"Creation of a Socket instance"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val uri = "https://example.com/socket.io/"\n\nval socket = IO.socket(endpoint)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax",children:"scheme"})," part of the URI is also mandatory. Both ",(0,o.jsx)(n.code,{children:"ws://"})," and ",(0,o.jsx)(n.code,{children:"http://"})," can be used interchangeably."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val socket = IO.socket("https://example.com/socket.io/"); // OK\nval socket = IO.socket("wss://example.com/socket.io/"); // OK, similar to the example above\nval socket = IO.socket("192.168.0.1:1234/socket.io/"); // NOT OK, missing the scheme part\n'})}),"\n",(0,o.jsx)(n.h3,{id:"connection",children:"Connection"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'\nsocket.onConnect { println("connected") }\n\nsocket.onDisconnect { println("disconnected") }\n\nsocket.connect()\n\n// socket.disconnect()\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"custom-path",children:"Custom Path"}),"\n",(0,o.jsx)(n.p,{children:"It is the name of the path that is captured on the server side."}),"\n",(0,o.jsx)(n.p,{children:"The server and the client values must match:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"JavaScript Server"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { Server } from 'socket.io';\n\nconst io = new Server(8080, {\n  path: '/my-custom-path/',\n});\n\nio.on('connection', (socket) => {\n  // ...\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Client"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val uri = "https://example.com/my-custom-path/"\n\nval socket = IO.socket(endpoint)\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Please note that this is different from socket-io-client-java works where the path in the URI represents the ",(0,o.jsx)(n.a,{href:"https://socket.io/docs/v4/namespaces/",children:"Namespace"}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"query-params",children:"Query Params"}),"\n",(0,o.jsxs)(n.p,{children:["Additional query parameters (then found in ",(0,o.jsx)(n.code,{children:"socket.handshake.query"})," object on the server-side)."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Client"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val uri = "https://example.com/socket.io/?x=42"\n\nval socket = IO.socket(endpoint)\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"JavaScript Server"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  console.log(socket.handshake.query); // prints { x: '42', EIO: '4', transport: 'polling' }\n});\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Please note that this is different from socket-io-client-java works where the query params are passed in IO.Options ",(0,o.jsx)(n.code,{children:"query"})]})}),"\n",(0,o.jsx)(n.h2,{id:"default-values",children:"Default values"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:"val options = IOOptions().apply {\n    forceNew = false\n    multiplex = true\n\n    upgrade = true\n    rememberUpgrade = true\n    extraHeaders = null\n\n    reconnection = true\n    reconnectionAttempts = 5\n    reconnectionDelay = 1000\n    reconnectionDelayMax = 5000\n    randomizationFactor = 0.5\n    timeout = 20000\n  }\n"})}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(n.h3,{id:"io-factory-options",children:"IO factory options"}),"\n",(0,o.jsx)(n.p,{children:"These settings will be shared by all Socket instances attached to the same Manager."}),"\n",(0,o.jsx)(n.h4,{id:"forcenew",children:(0,o.jsx)(n.code,{children:"forceNew"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.p,{children:"Whether to create a new Manager instance."}),"\n",(0,o.jsx)(n.p,{children:"A Manager instance is in charge of the low-level connection to the server (established with HTTP long-polling or WebSocket). It handles the reconnection logic."}),"\n",(0,o.jsxs)(n.p,{children:["A Socket instance is the interface which is used to sends events to \u2014 and receive events from \u2014 the server. It belongs to a given ",(0,o.jsx)(n.a,{href:"https://socket.io/docs/v4/namespaces",children:"namespace"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"A single Manager can be attached to several Socket instances."}),"\n",(0,o.jsx)(n.p,{children:"The following example will reuse the same Manager instance for the 3 Socket instances (one single WebSocket connection):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val socket = IO.socket("https://example.com"); // the main namespace\nval productSocket = IO.socket("https://example.com", namespace = "product"); // the "product" namespace\nval orderSocket = IO.socket("https://example.com", namespace = "order"); // the "order" namespace\n'})}),"\n",(0,o.jsx)(n.p,{children:"The following example will create 3 different Manager instances (and thus 3 distinct WebSocket connections):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val options = IOOptions().apply {\n      forceNew = true\n  }\n\nval socket = IO.socket("https://example.com", options); // the main namespace\nval productSocket = IO.socket("https://example.com", options, namespace = "product"); // the "product" namespace\nval orderSocket = IO.socket("https://example.com", options, namespace = "order"); // the "order" namespace\n'})}),"\n",(0,o.jsx)(n.h4,{id:"multiplex",children:(0,o.jsx)(n.code,{children:"multiplex"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"true"})]}),"\n",(0,o.jsxs)(n.p,{children:["The opposite of ",(0,o.jsx)(n.code,{children:"forceNew"}),": whether to reuse an existing Manager instance."]}),"\n",(0,o.jsx)(n.h3,{id:"low-level-engine-options",children:"Low-level engine options"}),"\n",(0,o.jsx)(n.h4,{id:"transports",children:(0,o.jsx)(n.code,{children:"transports"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:'listOf("polling", "websocket")'})]}),"\n",(0,o.jsx)(n.p,{children:"The low-level connection to the Socket.IO server can either be established with:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["HTTP long-polling: successive HTTP requests (",(0,o.jsx)(n.code,{children:"POST"})," for writing, ",(0,o.jsx)(n.code,{children:"GET"})," for reading)"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/WebSocket",children:"WebSocket"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The following example disables the HTTP long-polling transport:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val options = IOOptions().apply {\n      transports = listOf("websocket")\n  }\nval socket = IO.socket("https://example.com", options);\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note: in that case, sticky sessions are not required on the server side (more information ",(0,o.jsx)(n.a,{href:"https://socket.io/docs/v4/using-multiple-nodes/",children:"here"}),")."]}),"\n",(0,o.jsx)(n.h4,{id:"upgrade",children:(0,o.jsx)(n.code,{children:"upgrade"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"true"})]}),"\n",(0,o.jsx)(n.p,{children:"Whether the client should try to upgrade the transport from HTTP long-polling to something better."}),"\n",(0,o.jsx)(n.h4,{id:"rememberupgrade",children:(0,o.jsx)(n.code,{children:"rememberUpgrade"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsx)(n.p,{children:"If true and if the previous WebSocket connection to the server succeeded, the connection attempt will bypass the normal upgrade process and will initially try WebSocket. A connection attempt following a transport error will use the normal upgrade process. It is recommended you turn this on only when using SSL/TLS connections, or if you know that your network does not block websockets."}),"\n",(0,o.jsx)(n.h4,{id:"extraheaders",children:(0,o.jsx)(n.code,{children:"extraHeaders"})}),"\n",(0,o.jsx)(n.p,{children:"Default value: -"}),"\n",(0,o.jsxs)(n.p,{children:["Additional headers (then found in ",(0,o.jsx)(n.code,{children:"socket.handshake.headers"})," object on the server-side)."]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Client"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val options = IOOptions.apply {\n    extraHeaders = mapOf("authorization", "bearer 1234")\n  }\n\nval socket = IO.socket("https://example.com", options);\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"JavaScript Server"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  console.log(socket.handshake.headers); // prints { accept: '*/*', authorization: 'bearer 1234', connection: 'Keep-Alive', 'accept-encoding': 'gzip', 'user-agent': 'okhttp/3.12.12' }\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"manager-options",children:"Manager options"}),"\n",(0,o.jsx)(n.p,{children:"These settings will be shared by all Socket instances attached to the same Manager."}),"\n",(0,o.jsx)(n.h4,{id:"reconnection",children:(0,o.jsx)(n.code,{children:"reconnection"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"true"})]}),"\n",(0,o.jsxs)(n.p,{children:["Whether reconnection is enabled or not. If set to ",(0,o.jsx)(n.code,{children:"false"}),", you need to manually reconnect."]}),"\n",(0,o.jsx)(n.h4,{id:"reconnectionattempts",children:(0,o.jsx)(n.code,{children:"reconnectionAttempts"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"Integer.MAX_VALUE"})]}),"\n",(0,o.jsx)(n.p,{children:"The number of reconnection attempts before giving up."}),"\n",(0,o.jsx)(n.h4,{id:"reconnectiondelay",children:(0,o.jsx)(n.code,{children:"reconnectionDelay"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"1000"})]}),"\n",(0,o.jsxs)(n.p,{children:["The initial delay before reconnection in milliseconds (affected by the ",(0,o.jsx)(n.a,{href:"#randomizationfactor",children:"randomizationFactor"})," value)."]}),"\n",(0,o.jsx)(n.h4,{id:"reconnectiondelaymax",children:(0,o.jsx)(n.code,{children:"reconnectionDelayMax"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"5000"})]}),"\n",(0,o.jsx)(n.p,{children:"The maximum delay between two reconnection attempts. Each attempt increases the reconnection delay by 2x."}),"\n",(0,o.jsx)(n.h4,{id:"randomizationfactor",children:(0,o.jsx)(n.code,{children:"randomizationFactor"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"0.5"})]}),"\n",(0,o.jsx)(n.p,{children:"The randomization factor used when reconnecting (so that the clients do not reconnect at the exact same time after a server crash, for example)."}),"\n",(0,o.jsx)(n.p,{children:"Example with the default values:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["1st reconnection attempt happens between 500 and 1500 ms (",(0,o.jsx)(n.code,{children:"1000 * 2^0 * (<something between -0.5 and 1.5>)"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["2nd reconnection attempt happens between 1000 and 3000 ms (",(0,o.jsx)(n.code,{children:"1000 * 2^1 * (<something between -0.5 and 1.5>)"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:["3rd reconnection attempt happens between 2000 and 5000 ms (",(0,o.jsx)(n.code,{children:"1000 * 2^2 * (<something between -0.5 and 1.5>)"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"next reconnection attempts happen after 5000 ms"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"timeout",children:(0,o.jsx)(n.code,{children:"timeout"})}),"\n",(0,o.jsxs)(n.p,{children:["Default value: ",(0,o.jsx)(n.code,{children:"20000"})]}),"\n",(0,o.jsx)(n.p,{children:"The timeout in milliseconds for each connection attempt."}),"\n",(0,o.jsx)(n.h3,{id:"socket-options",children:"Socket options"}),"\n",(0,o.jsx)(n.p,{children:"These settings are specific to the given Socket instance."}),"\n",(0,o.jsx)(n.h4,{id:"multiplexing",children:"Multiplexing"}),"\n",(0,o.jsx)(n.p,{children:"The client does support multiplexing: this allows to split the logic of your application into distinct modules, while using one single WebSocket connection to the server."}),"\n",(0,o.jsxs)(n.p,{children:["Reference: ",(0,o.jsx)(n.a,{href:"https://socket.io/docs/v4/namespaces/",children:"https://socket.io/docs/v4/namespaces/"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val socket = IO.socket("https://example.com"); // the main namespace\nval productSocket = IO.socket("https://example.com", namespace="product"); // the "product" namespace\nval orderSocket = IO.socket("https://example.com", namespace="order"); // the "order" namespace\n\n// All 3 sockets share the same Manager\n'})}),"\n",(0,o.jsx)(t,{children:(0,o.jsx)("title",{children:"Community Packages Initialization"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(96540);const i={},c=o.createContext(i);function s(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);