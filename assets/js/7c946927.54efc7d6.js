"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[79312],{57002:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=n(74848),s=n(28453);const o={},i="Getting started with Polls",r={id:"capabilities/polls/getting_started",title:"Getting started with Polls",description:"Poll objects exist within a meeting and can only be accessed through a meeting object. This object provides methods to create polls, vote, and more.",source:"@site/docs/guides/capabilities/polls/getting_started.mdx",sourceDirName:"capabilities/polls",slug:"/capabilities/polls/getting_started",permalink:"/docs/guides/capabilities/polls/getting_started",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/capabilities/polls/getting_started.mdx",tags:[],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Polls",permalink:"/docs/guides/capabilities/polls/"},next:{title:"UIKit components for Polls",permalink:"/docs/guides/capabilities/polls/uikit"}},d={},c=[{value:"Creating a new Poll",id:"creating-a-new-poll",level:2},{value:"Using the Core SDK",id:"using-the-core-sdk",level:3},{value:"Using the REST API",id:"using-the-rest-api",level:3},{value:"Request",id:"request",level:4},{value:"Response",id:"response",level:4},{value:"Voting on a Poll",id:"voting-on-a-poll",level:2},{value:"View Poll Results",id:"view-poll-results",level:2},{value:"Get notified when a poll is created or updated",id:"get-notified-when-a-poll-is-created-or-updated",level:2}];function a(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:n,TabItem:o,Tabs:i}=l;return n||p("Head",!0),o||p("TabItem",!0),i||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.h1,{id:"getting-started-with-polls",children:"Getting started with Polls"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"Poll"})," objects exist within a meeting and can only be accessed through a meeting object. This object provides methods to create polls, vote, and more."]}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsxs)(o,{value:"web-components",label:"Web Components",children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"meeting.polls.items"})," returns an array of all polls created in a meeting, where each element is an object of type ",(0,t.jsx)(l.code,{children:"Poll"})," which is defined in the following manner."]}),(0,t.jsx)(l.p,{children:"The Poll object has the following properties:"}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"Unique ID assigned to each poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"question"}),(0,t.jsx)(l.td,{children:"Question of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"options"}),(0,t.jsx)(l.td,{children:"Array of PollOption object, contains all the options to the poll question"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"anonymous"}),(0,t.jsx)(l.td,{children:"To hide the votes of each user even after completion (false by default)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"hideVotes"}),(0,t.jsx)(l.td,{children:"Hide votes until the voting is complete (enabled if anonymous is enabled)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdBy"}),(0,t.jsx)(l.td,{children:"Name of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdByUserId"}),(0,t.jsx)(l.td,{children:"ID of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"voted"}),(0,t.jsx)(l.td,{children:"List of participant IDs who have voted on the poll"})]})]})]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"PollOption"})," object has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"text"}),(0,t.jsx)(l.td,{children:"Contains the option text"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"votes"}),(0,t.jsx)(l.td,{children:"List of PollVote object, which contains the id and name of the voters of this option"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"count"}),(0,t.jsx)(l.td,{children:"Int of number of votes given to this option"})]})]})]})]}),(0,t.jsxs)(o,{value:"react",label:"React",children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"meeting.polls.items"})," returns an array of all polls created in a meeting, where each element is an object of type ",(0,t.jsx)(l.code,{children:"Poll"})," which is defined in the following manner."]}),(0,t.jsx)(l.p,{children:"The Poll object has the following properties:"}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"Unique ID assigned to each poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"question"}),(0,t.jsx)(l.td,{children:"Question of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"options"}),(0,t.jsx)(l.td,{children:"Array of PollOption object, contains all the options to the poll question"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"anonymous"}),(0,t.jsx)(l.td,{children:"To hide the votes of each user even after completion (false by default)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"hideVotes"}),(0,t.jsx)(l.td,{children:"Hide votes until the voting is complete (enabled if anonymous is enabled)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdBy"}),(0,t.jsx)(l.td,{children:"Name of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdByUserId"}),(0,t.jsx)(l.td,{children:"ID of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"voted"}),(0,t.jsx)(l.td,{children:"List of participant IDs who have voted on the poll"})]})]})]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"PollOption"})," object has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"text"}),(0,t.jsx)(l.td,{children:"Contains the option text"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"votes"}),(0,t.jsx)(l.td,{children:"List of PollVote object, which contains the id and name of the voters of this option"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"count"}),(0,t.jsx)(l.td,{children:"Int of number of votes given to this option"})]})]})]})]}),(0,t.jsxs)(o,{value:"flutter",label:"Flutter",children:[(0,t.jsxs)(l.p,{children:["The meetings polls object can be accessed using ",(0,t.jsx)(l.code,{children:"dyteClient.polls"}),". ",(0,t.jsx)(l.code,{children:"dyteClient.polls.polls"})," returns an array of all polls created in a meeting, where each element is an object of type DytePollMessage."]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"DytePollMessage"})," has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"Unique ID assigned to each poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"question"}),(0,t.jsx)(l.td,{children:"Question of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"anonymous"}),(0,t.jsx)(l.td,{children:"To hide the votes of each user even after completion (false by default)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"hideVotes"}),(0,t.jsx)(l.td,{children:"Hide votes until the voting is complete (enabled if anonymous is enabled)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdBy"}),(0,t.jsx)(l.td,{children:"Name of creator the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"options"}),(0,t.jsx)(l.td,{children:"Array of DytePollOption object, contains all the options to the poll question"})]})]})]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"DytePollOption"})," has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"text"}),(0,t.jsx)(l.td,{children:"Contains the option text"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"votes"}),(0,t.jsx)(l.td,{children:"List of DytePollVote object, which contains info about voters of this option"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"count"}),(0,t.jsx)(l.td,{children:"Int of number of votes given to this option"})]})]})]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"DytePollVote"})," has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"ID of the voter"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"name"}),(0,t.jsx)(l.td,{children:"Name of the voter"})]})]})]})]}),(0,t.jsxs)(o,{value:"react-native",label:"React Native",children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"meeting.polls.items"})," returns an array of all polls created in a meeting, where each element is an object of type ",(0,t.jsx)(l.code,{children:"Poll"})," which is defined in the following manner."]}),(0,t.jsx)(l.p,{children:"The Poll object has the following properties:"}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"Unique ID assigned to each poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"question"}),(0,t.jsx)(l.td,{children:"Question of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"options"}),(0,t.jsx)(l.td,{children:"Array of PollOption object, contains all the options to the poll question"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"anonymous"}),(0,t.jsx)(l.td,{children:"To hide the votes of each user even after completion (false by default)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"hideVotes"}),(0,t.jsx)(l.td,{children:"Hide votes until the voting is complete (enabled if anonymous is enabled)"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdBy"}),(0,t.jsx)(l.td,{children:"Name of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"createdByUserId"}),(0,t.jsx)(l.td,{children:"ID of creator of the poll"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"voted"}),(0,t.jsx)(l.td,{children:"List of participant IDs who have voted on the poll"})]})]})]}),(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"PollOption"})," object has the following properties:"]}),(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Property"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"text"}),(0,t.jsx)(l.td,{children:"Contains the option text"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"votes"}),(0,t.jsx)(l.td,{children:"List of PollVote object, which contains the id and name of the voters of this option"})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"count"}),(0,t.jsx)(l.td,{children:"Int of number of votes given to this option"})]})]})]})]}),(0,t.jsxs)(o,{value:"android",label:"Android(Kotlin)",children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where\neach element is an object of type ",(0,t.jsx)(l.code,{children:"DytePollMessage"}),"."]}),(0,t.jsxs)(l.p,{children:["The type ",(0,t.jsx)(l.code,{children:"DytePollMessage"})," is the main class for any poll in Dyte. It also\ncontains list of ",(0,t.jsx)(l.code,{children:"DytePollOption"})," which are options for a given poll. And every\n",(0,t.jsx)(l.code,{children:"DytePollOption"})," has list of votes inside of it. Votes are objects of class\n",(0,t.jsx)(l.code,{children:"DytePollVote"})," which internally has id and name of the vote."]}),(0,t.jsxs)(l.p,{children:["One can easily create, vote and view polls by listening to callbacks on\n",(0,t.jsx)(l.code,{children:"meeting"})," object."]})]}),(0,t.jsxs)(o,{value:"iOS",label:"iOS(Swift)",children:[(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where each element is an object of type ",(0,t.jsx)(l.code,{children:"DytePollMessage"})]}),(0,t.jsxs)(l.p,{children:["The type ",(0,t.jsx)(l.code,{children:"DytePollMessage"})," is the main class for any poll in Dyte. It also contains list of ",(0,t.jsx)(l.code,{children:"DytePollOption"})," which are options for a given poll. And every ",(0,t.jsx)(l.code,{children:"DytePollOption"})," has list of votes inside of it. Votes are objects of class DytePollVote which internally has id and name of the vote."]})]})]}),"\n",(0,t.jsx)(l.h2,{id:"creating-a-new-poll",children:"Creating a new Poll"}),"\n",(0,t.jsx)(l.h3,{id:"using-the-core-sdk",children:"Using the Core SDK"}),"\n",(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"Polls"})," object gives a create function to create a new poll. It accepts the following parameters:"]}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Param"}),(0,t.jsx)(l.th,{children:"Type"}),(0,t.jsx)(l.th,{children:"Default Value"}),(0,t.jsx)(l.th,{children:"Required"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"question"}),(0,t.jsx)(l.td,{children:"string"}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"yes"}),(0,t.jsx)(l.td,{children:"The question that is to be voted for."})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"options"}),(0,t.jsx)(l.td,{children:"string[]"}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"yes"}),(0,t.jsx)(l.td,{children:"The options of the poll."})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"anonymous"}),(0,t.jsx)(l.td,{children:"boolean"}),(0,t.jsx)(l.td,{children:"false"}),(0,t.jsx)(l.td,{children:"no"}),(0,t.jsx)(l.td,{children:"If true, the poll votes are anonymous."})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"hideVotes"}),(0,t.jsx)(l.td,{children:"boolean"}),(0,t.jsx)(l.td,{children:"false"}),(0,t.jsx)(l.td,{children:"no"}),(0,t.jsx)(l.td,{children:"If true, the votes on the poll are hidden."})]})]})]}),"\n",(0,t.jsx)(l.p,{children:"Check the implementation in your desired framework."}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsxs)(o,{value:"web-components",label:"Web Components",children:[(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-js",children:"await meeting.poll.create(\n  'Are you an early bird or a night owl?',\n  ['Early bird', 'Night owl'],\n  true\n);\n"})}),(0,t.jsx)(l.p,{children:"Here is a snippet of a poll where votes are anonymous."})]}),(0,t.jsx)(o,{value:"react",label:"React",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:"await meeting.poll.create(\n  'Are you an early bird or a night owl?',\n  ['Early bird', 'Night owl'],\n  true\n);\n"})})}),(0,t.jsx)(o,{value:"flutter",label:"Flutter",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:'dyteClient.polls.create(\n    question: "Are you an early bird or a night owl?",\n    options: ["Early bird", "Night owl"],\n    anonymous: true,\n    hideVotes: false,\n);\n'})})}),(0,t.jsx)(o,{value:"react-native",label:"React Native",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-jsx",children:"await meeting.poll.create(\n  'Are you an early bird or a night owl?',\n  ['Early bird', 'Night owl'],\n  true\n);\n"})})}),(0,t.jsx)(o,{value:"android",label:"Android(Kotlin)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-kotlin",children:'meeting.poll.create(\n    "Are you an early bird or a night owl?",\n    listOf("Early bird", "Night owl"),\n    true,\n    false\n)\n'})})}),(0,t.jsx)(o,{value:"iOS",label:"iOS(Swift)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-swift",children:'meeting.polls.create(\n    question: "Are you an early bird or a night owl?",\n    options: ["Early bird", "Night owl"],\n    anonymous: true,\n    hideVotes: false\n)\n'})})})]}),"\n",(0,t.jsx)(l.h3,{id:"using-the-rest-api",children:"Using the REST API"}),"\n",(0,t.jsxs)(l.p,{children:["You can also create a poll using the ",(0,t.jsx)(l.a,{href:"/api#/operations/CreatePoll",children:"Create a Poll"})," REST API. This can be used to create a new poll in an active meeting session. In the request, make sure to provide the meeting ID of the session."]}),"\n",(0,t.jsx)(l.h4,{id:"request",children:"Request"}),"\n",(0,t.jsx)(l.p,{children:"Here is a sample request, make sure to replace the meeting ID and the authorization header with your own."}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-bash",children:'curl --request POST \\\n  --url https://api.dyte.io/v2/meetings/meeting_id/active-session/poll \\\n  --header \'Authorization: Basic undefined\' \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{\n  "question": "string",\n  "options": [\n    "string"\n  ],\n  "anonymous": true,\n  "hide_votes": true\n}\'\n'})}),"\n",(0,t.jsx)(l.h4,{id:"response",children:"Response"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-json",children:'{\n  "success": true,\n  "data": {\n    "action": "string",\n    "poll": {\n      "id": "string",\n      "question": "string",\n      "options": [\n        {\n          "text": "string",\n          "count": 0,\n          "votes": [\n            {\n              "id": "string",\n              "name": "string"\n            }\n          ]\n        }\n      ],\n      "anonymous": true,\n      "hide_votes": true,\n      "created_by": "string",\n      "voted": ["string"]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(l.h2,{id:"voting-on-a-poll",children:"Voting on a Poll"}),"\n",(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.code,{children:"Poll"})," object also provides a ",(0,t.jsx)(l.code,{children:"vote"})," method that can be used to register votes on a poll.\nIt accepts the following parameters:"]}),"\n",(0,t.jsxs)(l.table,{children:[(0,t.jsx)(l.thead,{children:(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.th,{children:"Param"}),(0,t.jsx)(l.th,{children:"Type"}),(0,t.jsx)(l.th,{children:"Default Value"}),(0,t.jsx)(l.th,{children:"Required"}),(0,t.jsx)(l.th,{children:"Description"})]})}),(0,t.jsxs)(l.tbody,{children:[(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"id"}),(0,t.jsx)(l.td,{children:"string"}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"yes"}),(0,t.jsx)(l.td,{children:"The ID of the poll that is to be voted on."})]}),(0,t.jsxs)(l.tr,{children:[(0,t.jsx)(l.td,{children:"index"}),(0,t.jsx)(l.td,{children:"number"}),(0,t.jsx)(l.td,{children:"-"}),(0,t.jsx)(l.td,{children:"yes"}),(0,t.jsx)(l.td,{children:"The index of the option."})]})]})]}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsx)(o,{value:"web-components",label:"Web Components",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:"const poll = meeting.polls.items[0];\nawait meeting.poll.vote(poll.id, 0);\n"})})}),(0,t.jsx)(o,{value:"react",label:"React",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:"const poll = meeting.polls.items[0];\nawait meeting.poll.vote(poll.id, 0);\n"})})}),(0,t.jsx)(o,{value:"flutter",label:"Flutter",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:"final poll = dyteClient.polls.polls[0];\nfinal selectedPollOption = poll.options[0];\ndyteClient.polls.vote(poll, selectedPollOption);\n"})})}),(0,t.jsx)(o,{value:"react-native",label:"React Native",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:"const poll = meeting.polls.items[0];\nawait meeting.poll.vote(poll.id, 0);\n"})})}),(0,t.jsx)(o,{value:"android",label:"Android(Kotlin)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-kotlin",children:"val poll = meeting.polls.items[0]\nval selectedPollOption = poll.options[0]\nmeeting.poll.vote(poll, selectedPollOption)\n"})})}),(0,t.jsx)(o,{value:"iOS",label:"iOS(Swift)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-swift",children:"let poll = meeting.polls.items.first\nlet selectedPollOption = poll.options.first\nmeeting.polls.vote(pollMessage: poll, pollOption: selectedPollOption)\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"view-poll-results",children:"View Poll Results"}),"\n",(0,t.jsxs)(l.p,{children:["The total votes on a poll can be accessed in the following manner where ",(0,t.jsx)(l.code,{children:"votes"})," is an array of all participant ids."]}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsx)(o,{value:"web-components",label:"Web Components",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-jsx",children:"const poll = meeting.polls.items[0];\nconst votes = poll.voted;\n"})})}),(0,t.jsx)(o,{value:"react",label:"React",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"const poll = meeting.polls.items[0];\nconst votes = poll.voted;\n"})})}),(0,t.jsx)(o,{value:"flutter",label:"Flutter",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:"final poll = dyteClient.polls.polls[0];\nlet votes = 0;\nfor (final option in poll.options) {\n  votes += option.count\n}\n"})})}),(0,t.jsx)(o,{value:"react-native",label:"React Native",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"const poll = meeting.polls.items[0];\nconst votes = poll.voted;\n"})})}),(0,t.jsx)(o,{value:"android",label:"Android(Kotlin)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-kotlin",children:"val poll = meeting.polls.items[0]\nval votes = 0;\nfor (option in poll.options){\n  votes += option.votes.siz;\n}\n"})})}),(0,t.jsx)(o,{value:"iOS",label:"iOS(Swift)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-swift",children:"let poll = meeting.polls.items.first\nlet votes = 0;\nfor option in poll.options {\n  votes += option.votes.count\n}\n"})})})]}),"\n",(0,t.jsx)(l.p,{children:"To get total votes on a particular poll option, the list of all options can be fetched, through which you can get the number of votes on each option."}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsxs)(o,{value:"web-components",label:"Web Components",children:[(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-jsx",children:"const poll = meeting.polls.items[0];\nconst options = poll.options;\n"})}),(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.code,{children:"options"})," returns an array of objects, where each object is of type ",(0,t.jsx)(l.a,{href:"./",children:(0,t.jsx)(l.code,{children:"PollObject"})}),"."]})]}),(0,t.jsx)(o,{value:"react",label:"React",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"const poll = meeting.polls.items[0];\nconst options = poll.options;\n"})})}),(0,t.jsx)(o,{value:"flutter",label:"Flutter",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:"final poll = dyteClient.polls.polls[0];\nfinal options = poll.option;\n"})})}),(0,t.jsx)(o,{value:"react-native",label:"React Native",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-tsx",children:"const poll = meeting.polls.items[0];\nconst options = poll.options;\n"})})}),(0,t.jsx)(o,{value:"android",label:"Android(Kotlin)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-kotlin",children:"val poll = meeting.polls.items[0]\nval options = poll.options;\n"})})}),(0,t.jsx)(o,{value:"iOS",label:"iOS(Swift)",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-swift",children:"let poll =  meeting.polls.items.first;\nlet options = poll.option;\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"get-notified-when-a-poll-is-created-or-updated",children:"Get notified when a poll is created or updated"}),"\n",(0,t.jsxs)(l.p,{children:["An event is fired each time ",(0,t.jsx)(l.code,{children:"items"})," in the ",(0,t.jsx)(l.code,{children:"Polls Objects"})," are updated or created. User\ncan listen for this to get the updated list of polls. the response object\ncontains the following properties."]}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"polls"}),": List of all polls."]}),"\n",(0,t.jsxs)(l.li,{children:[(0,t.jsx)(l.code,{children:"newPoll"}),": A boolean variable which is true when a new poll has been created."]}),"\n"]}),"\n",(0,t.jsxs)(i,{groupId:"framework",children:[(0,t.jsx)(o,{value:"web-components",label:"Web Components",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-ts",children:"meeting.polls.on('pollsUpdate', ({ polls, newPoll }) => {\n  console.log(polls, newPoll);\n});\n"})})}),(0,t.jsx)(o,{value:"react",label:"React",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-jsx",children:"meeting.polls.on('pollsUpdate', ({ polls, newPoll }) => {\n  console.log(polls, newPoll);\n});\n"})})}),(0,t.jsxs)(o,{value:"flutter",label:"Flutter",children:[(0,t.jsxs)(l.p,{children:["To be able to receive new poll messages you need to implement a method onPollUpdates() method from callback ",(0,t.jsx)(l.code,{children:"DytePollEventsListener"}),":"]}),(0,t.jsxs)(l.p,{children:["To get poll updates, listen to ",(0,t.jsx)(l.code,{children:"onPollUpdates()"})," callback:"]}),(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:"\nclass PollEventsListeners extends DytePollEventsListener {\n\n  ...\n\n  @override\n  void onPollUpdates(List<DytePollMessage> polls) {\n    /// code to handle polls\n  }\n\n  @override\n  void onNewPoll(DytePollMessage poll) {\n    /// code to handle new poll\n  }\n\n  ...\n}\n\n"})}),(0,t.jsxs)(l.p,{children:["You can subscribe to this events by ",(0,t.jsx)(l.code,{children:"addPollEventsListener"})," method:"]}),(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-dart",children:"dyteClient.addPollEventsListener(PollEventsListeners());\n"})})]}),(0,t.jsx)(o,{value:"react-native",label:"React Native",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-jsx",children:"meeting.polls.on('pollsUpdate', ({ polls, newPoll }) => {\n  console.log(polls, newPoll);\n});\n"})})}),(0,t.jsxs)(o,{value:"android",label:"Android(Kotlin)",children:[(0,t.jsxs)(l.p,{children:["To be able to receive new poll messages you need to implement a method\n",(0,t.jsx)(l.code,{children:"onPollUpdates()"})," method from callback ",(0,t.jsx)(l.code,{children:"DyteMeetingRoomEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,t.jsx)(l.code,{children:"meeting.addMeetingEventsListener(dyteMeetingRoomEventsListener)"})]}),(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-kotlin",children:"    meeting.addMeetingRoomEventsListener(object :\n      DyteMeetingRoomEventsListener {\n      override fun onNewPoll(poll: DytePollMessage) {\n        super.onNewPoll(poll)\n        // code to handle new poll\n      }\n\n      override fun onPollUpdates(pollMessages: List<DytePollMessage>) {\n        super.onPollUpdates(pollMessages)\n        // code to handle polls and their vote updates.\n      }\n    })\n"})})]}),(0,t.jsxs)(o,{value:"iOS",label:"iOS(Swift)",children:[(0,t.jsxs)(l.p,{children:["To receive new poll messages, you must implement the",(0,t.jsx)(l.code,{children:" onPollUpdates()"})," method from the callback ",(0,t.jsx)(l.code,{children:"DytePollEventsListener"}),". You can subscribe to this event by using the meeting.",(0,t.jsx)(l.code,{children:"addMeetingEventsListener(dytePollEventsListener)"})," method."]}),(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-swift",children:"extension MeetingViewModel: DytePollEventsListener {\n      func onNewPoll(poll: DytePollMessage) {\n        // code to handle new poll\n      }\n\n      func onPollUpdates(pollMessages: [DytePollMessage]) {\n        // code to handle polls and their vote updates\n      }\n    }\n"})})]})]}),"\n",(0,t.jsx)(n,{children:(0,t.jsx)("title",{children:"Getting started with Polls Guide"})})]})}function h(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}function p(e,l){throw new Error("Expected "+(l?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,l,n)=>{n.d(l,{R:()=>i,x:()=>r});var t=n(96540);const s={},o=t.createContext(s);function i(e){const l=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:l},e.children)}}}]);