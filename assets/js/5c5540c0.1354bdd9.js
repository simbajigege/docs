"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[45604],{50418:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=t(74848),a=t(28453);const s={},i="Displaying Screenshare",c={id:"capabilities/screensharing/displaying",title:"Displaying Screenshare",description:"Usage",source:"@site/docs/guides/capabilities/screensharing/displaying.mdx",sourceDirName:"capabilities/screensharing",slug:"/capabilities/screensharing/displaying",permalink:"/docs/guides/capabilities/screensharing/displaying",draft:!1,unlisted:!1,editUrl:"https://github.com/dyte-io/docs/tree/main/docs/guides/capabilities/screensharing/displaying.mdx",tags:[],version:"current",lastUpdatedAt:1706782034,formattedLastUpdatedAt:"Feb 1, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Enable/Disable Screenshare",permalink:"/docs/guides/capabilities/screensharing/basics"},next:{title:"Meeting AI",permalink:"/docs/guides/capabilities/ai/"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:'Events <div class="header-tag tag-core">Core</div>',id:"events-core",level:3},{value:'Components <div class="header-tag tag-ui">UI Kit</div>',id:"components-ui-kit",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:t,TabItem:s,Tabs:i}=n;return t||p("Head",!0),s||p("TabItem",!0),i||p("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"displaying-screenshare",children:"Displaying Screenshare"}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.h3,{id:"events-core",children:["Events ",(0,r.jsx)("div",{class:"header-tag tag-core",children:"Core"})]}),"\n",(0,r.jsx)(n.p,{children:"Once any user starts sharing the screen, use the screenshare view from the UIKit to display the shared screen. The component allows you to nest other components inside it to create a custom layout based on your needs. Check out a the sample usage of UIKit on your prefered platform."}),"\n",(0,r.jsxs)(i,{groupId:"framework",defaultValue:"react",children:[(0,r.jsx)(s,{value:"js",label:"Javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"meeting.participants.joined.on('screenShareUpdate', (participant) => {\n  if (participant.screenShareEnabled) {\n    // participant.screenShareTrack\n  } else {\n    // handle stop screen share\n  }\n});\n"})})}),(0,r.jsx)(s,{value:"react",label:"React",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { meeting } = useDyteMeeting();\n\n// Array of participants having their screenshare on\nconst ssParticipants = useDyteSelector((m) =>\n  m.participant.joined.toArray().filter((p) => p.screenShareEnabled)\n);\n\n// or using traditional event listeners\nmeeting.participants.joined.on('screenShareUpdate', (participant) => {\n  if (participant.screenShareEnabled) {\n    // participant.screenShareTrack\n  } else {\n    // handle stop screen share\n  }\n});\n"})})}),(0,r.jsx)(s,{value:"flutter",label:"Flutter",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"...\n\n@override\nvoid onScreenShareStarted(DyteJoinedMeetingParticipant participant) {\n  /// handle screen share started of `DyteJoinedMeetingParticipant` participant\n}\n\n@override\nvoid onScreenShareEnded(DyteJoinedMeetingParticipant participant) {\n  /// handle screen share ended of `DyteJoinedMeetingParticipant` participant\n}\n\n...\n"})})}),(0,r.jsx)(s,{value:"react-native",label:"React Native",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const { meeting } = useDyteMeeting();\n\n// Array of participants having their screenshare on\nconst ssParticipants = useDyteSelector((m) =>\n  m.participant.joined.toArray().filter((p) => p.screenShareEnabled)\n);\n\n// or using traditional event listeners\nmeeting.participants.joined.on('screenShareUpdate', (participant) => {\n  if (participant.screenShareEnabled) {\n    // participant.screenShareTrack\n  } else {\n    // handle stop screen share\n  }\n});\n"})})}),(0,r.jsx)(s,{value:"android",label:"Android (Kotlin)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"\nprivate val participantEventsListener = object : DyteParticipantEventsListener {\n        override fun onScreenSharesUpdated() {\n            super.onScreenSharesUpdated()\n\n            ...\n        }\n    }\n\n"})})}),(0,r.jsx)(s,{value:"ios",label:"iOS (Swift)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-swift",children:"DyteParticipantEventsListener {\n        func onScreenSharesUpdated() {\n            // your code here to handle screenshares from meeting\n        }\n        func onScreenShareEnded(participant: DyteMeetingParticipant) {\n            // your code here to handle screenshare ended\n        }\n\n        func onScreenShareStarted(participant: DyteMeetingParticipant) {\n            //  your code here to handle screenshare started\n        }\n}\n"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"components-ui-kit",children:["Components ",(0,r.jsx)("div",{class:"header-tag tag-ui",children:"UI Kit"})]}),"\n",(0,r.jsx)(n.p,{children:"This component does not render anything if the participant hasn't start sharing their screen."}),"\n",(0,r.jsxs)(i,{groupId:"framework",children:[(0,r.jsxs)(s,{value:"web-components",label:"Web Components",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<dyte-screenshare-view class="dyte-el" style="height: 480px">\n  <dyte-name-tag class="dyte-el">\n    <dyte-audio-visualizer class="dyte-el" slot="start"></dyte-audio-visualizer>\n  </dyte-name-tag>\n</dyte-screenshare-view>\n\n<script>\n  const elements = document.getElementsByClassName(\'dyte-el\');\n  for (const el of elements) {\n    el.participant = ssParticipant;\n  }\n<\/script>\n'})}),(0,r.jsxs)(n.p,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/ui-kit/components/dyte-screenshare-view",children:"reference"})," for more details about the attributes."]}),(0,r.jsxs)(n.p,{children:["To create your own component, you can use the ",(0,r.jsx)(n.code,{children:"screenShareTracks"})," property of the ",(0,r.jsx)(n.a,{href:"/web-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]}),(0,r.jsxs)(s,{value:"react",label:"React",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import {\n  DyteScreenshareView,\n  DyteNameTag,\n  DyteAudioVisualizer,\n} from '@dytesdk/react-ui-kit';\n\n<DyteScreenshareView participant={ssParticipant} style={{ height: '480px' }}>\n  <DyteNameTag participant={ssParticipant}>\n    <DyteAudioVisualizer slot=\"start\" participant={ssParticipant} />\n  </DyteNameTag>\n</DyteScreenshareView>;\n"})}),(0,r.jsxs)(n.p,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/react-ui-kit/components/dyte-screenshare-view",children:"reference"})," for more details about the props."]}),(0,r.jsxs)(n.p,{children:["To create your own component, you can use the ",(0,r.jsx)(n.code,{children:"screenShareTracks"})," property of the ",(0,r.jsx)(n.a,{href:"/react-web-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]}),(0,r.jsxs)(s,{value:"angular",label:"Angular",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<dyte-screenshare-view class="dyte-el" style="height: 480px">\n  <dyte-name-tag class="dyte-el">\n    <dyte-audio-visualizer class="dyte-el" slot="start"></dyte-audio-visualizer>\n  </dyte-name-tag>\n</dyte-screenshare-view>\n\n<script>\nconst elements = document.getElementsByClassName(\'dyte-el\');\n  for (const el of elements) {\n    el.participant = ssParticipant;\n  }\n<\/script>\n'})}),(0,r.jsxs)(n.p,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/angular-ui-kit/components/dyte-screenshare-view",children:"reference"})," for more details about the attributes."]}),(0,r.jsxs)(n.p,{children:["To create your own component, you can use the ",(0,r.jsx)(n.code,{children:"screenShareTracks"})," property of the ",(0,r.jsx)(n.a,{href:"/web-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]}),(0,r.jsx)(s,{value:"flutter",label:"Flutter",children:(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This UI component does not currently exist in the Flutter UIKit."})})}),(0,r.jsxs)(s,{value:"react-native",label:"React Native",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import {\n  DyteScreenshareView,\n  DyteNameTag,\n  DyteAudioVisualizer,\n} from '@dytesdk/react-native-ui-kit';\n\n<DyteScreenshareView participant={ssParticipant} style={{ height: '480px' }}>\n  <DyteNameTag participant={ssParticipant}>\n    <DyteAudioVisualizer slot=\"start\" participant={ssParticipant} />\n  </DyteNameTag>\n</DyteScreenshareView>;\n"})}),(0,r.jsxs)(n.p,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/react-native/components/dyte-screenshare-view",children:"reference"})," for more details about the props."]}),(0,r.jsxs)(n.p,{children:["To create your own component, you can use the ",(0,r.jsx)(n.code,{children:"screenShareTracks"})," property of the ",(0,r.jsx)(n.a,{href:"/rn-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]}),(0,r.jsxs)(s,{value:"android",label:"Android (Kotlin)",children:[(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This UI component does not currently exist in the Android UIKit."})}),(0,r.jsxs)(n.p,{children:["You can create your own component. To do so use the ",(0,r.jsx)(n.code,{children:"screenShareTrack"})," property of the ",(0,r.jsx)(n.a,{href:"/android-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]}),(0,r.jsxs)(s,{value:"ios",label:"iOS (Swift)",children:[(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This UI component does not currently exist in the iOS UIKit."})}),(0,r.jsxs)(n.p,{children:["You can create your own component. To do so use the ",(0,r.jsx)(n.code,{children:"screenShareTrack"})," property of the ",(0,r.jsx)(n.a,{href:"/ios-core/local-user/introduction",children:"local user"})," to get the list of screen share tracks and control how you want to display them."]})]})]}),"\n",(0,r.jsx)(t,{children:(0,r.jsx)("title",{children:"Displaying Screenshare Guide"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(96540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);